{
  "address": "0xE5742B2CA1D1DaF17Bd4718B4Ae558d942E18B99",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_roles",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AUTHORIZED_FUND_TRADER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BORROWER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_CONTROLLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_SOURCE",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUND",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INCENTIVE_DISTRIBUTION",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INCENTIVE_REPORTER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LENDING",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATOR",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_CALLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_TRADER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_TRADING",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_CONTROLLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKE_PENALIZER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN_ACTIVATOR",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allCharacters",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allRoles",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentExecutor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegateOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "disabler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        }
      ],
      "name": "executeAsOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "giveRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "knownCharacters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "knownRoles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "mainCharacterCache",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        },
        {
          "internalType": "uint16[]",
          "name": "charactersPlayed",
          "type": "uint16[]"
        },
        {
          "internalType": "uint16[]",
          "name": "rolesPlayed",
          "type": "uint16[]"
        },
        {
          "internalType": "address[]",
          "name": "ownsAsDelegate",
          "type": "address[]"
        }
      ],
      "name": "manageContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "managedContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "ownsContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "ownsContractStrict",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownableContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "relinquishOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "removeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "roleCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roles",
      "outputs": [
        {
          "internalType": "contract Roles",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disablerAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "setDisabler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "setMainCharacter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "character",
          "type": "uint16"
        }
      ],
      "name": "updateMainCharacterCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "updateRoleCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyOwnership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ownsAll",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyOwnershipStrict",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ownsAll",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x930cb5b2068fe89dd958be9bdb97b992ace75834f9c2ccc11de45de28dbd9f4b",
  "receipt": {
    "to": null,
    "from": "0x23292e9BA8434e59E6BAC1907bA7425211c4DE27",
    "contractAddress": "0xE5742B2CA1D1DaF17Bd4718B4Ae558d942E18B99",
    "transactionIndex": 3,
    "gasUsed": "2803605",
    "logsBloom": "0x
    "blockHash": "0x1680f86873a35135d7f3986fc223a302d00fa3cfb6fa3189545c29d206fefe7d",
    "transactionHash": "0x930cb5b2068fe89dd958be9bdb97b992ace75834f9c2ccc11de45de28dbd9f4b",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 23977615,
        "transactionHash": "0x930cb5b2068fe89dd958be9bdb97b992ace75834f9c2ccc11de45de28dbd9f4b",
        "address": "0xE5742B2CA1D1DaF17Bd4718B4Ae558d942E18B99",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000023292e9ba8434e59e6bac1907ba7425211c4de27"
        ],
        "data": "0x",
        "logIndex": 11,
        "blockHash": "0x1680f86873a35135d7f3986fc223a302d00fa3cfb6fa3189545c29d206fefe7d"
      }
    ],
    "blockNumber": 23977615,
    "cumulativeGasUsed": "3302258",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa94DDbb3Ba629E637F63F54Bae6724c271ccA48f"
  ],
  "solcInputHash": "08be857727729141da45d726c3ea7073",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_roles\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AUTHORIZED_FUND_TRADER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BORROWER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_CONTROLLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_SOURCE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FUND\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INCENTIVE_DISTRIBUTION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INCENTIVE_REPORTER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDING\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_CALLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_TRADER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_TRADING\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_CONTROLLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_PENALIZER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_ACTIVATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allCharacters\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRoles\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegateOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disabler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"executeAsOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"giveRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"knownCharacters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"knownRoles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"mainCharacterCache\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"},{\"internalType\":\"uint16[]\",\"name\":\"charactersPlayed\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16[]\",\"name\":\"rolesPlayed\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"ownsAsDelegate\",\"type\":\"address[]\"}],\"name\":\"manageContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"managedContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"ownsContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"ownsContractStrict\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownableContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"relinquishOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"roleCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"contract Roles\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disablerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setDisabler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"setMainCharacter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"character\",\"type\":\"uint16\"}],\"name\":\"updateMainCharacterCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"updateRoleCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ownsAll\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyOwnershipStrict\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ownsAll\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides a single point of reference to verify ownership integrity within our system as well as performing cache invalidation for roles and inter-contract relationships\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DependencyController.sol\":\"DependencyController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/DependencyController.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"./RoleAware.sol\\\";\\nimport \\\"../interfaces/IExecutor.sol\\\";\\nimport \\\"../interfaces/IDelegateOwner.sol\\\";\\n\\n/// @dev Provides a single point of reference to verify ownership integrity\\n/// within our system as well as performing cache invalidation for\\n/// roles and inter-contract relationships\\ncontract DependencyController is RoleAware, Ownable, IDelegateOwner {\\n    constructor(address _roles) RoleAware(_roles) Ownable() {}\\n\\n    address[] public managedContracts;\\n    mapping(uint16 => bool) public knownCharacters;\\n    mapping(uint16 => bool) public knownRoles;\\n    mapping(address => address) public delegateOwner;\\n    mapping(address => bool) public disabler;\\n    address public currentExecutor = address(0);\\n\\n    uint16[] public allCharacters;\\n    uint16[] public allRoles;\\n\\n    modifier onlyOwnerOrExecOrDisabler() {\\n        require(\\n            owner() == _msgSender() ||\\n                disabler[_msgSender()] ||\\n                currentExecutor == _msgSender(),\\n            \\\"Caller is not the owner or authorized disabler or executor\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyOwnerOrExec() {\\n        require(\\n            owner() == _msgSender() || currentExecutor == _msgSender(),\\n            \\\"Caller is not the owner or executor\\\"\\n        );\\n        _;\\n    }\\n\\n    function verifyOwnership() external view returns (bool ownsAll) {\\n        ownsAll = ownsContractStrict(address(roles));\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            address contr = managedContracts[i];\\n            ownsAll = ownsAll && ownsContract(contr);\\n        }\\n    }\\n\\n    function verifyOwnershipStrict() external view returns (bool ownsAll) {\\n        ownsAll = ownsContractStrict(address(roles));\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            address contr = managedContracts[i];\\n            ownsAll = ownsAll && ownsContractStrict(contr);\\n        }\\n    }\\n\\n    function ownsContract(address contr) public view returns (bool) {\\n        address contrOwner = Ownable(contr).owner();\\n        return\\n            contrOwner == address(this) ||\\n            contrOwner == owner() ||\\n            contrOwner == delegateOwner[contr];\\n    }\\n\\n    function ownsContractStrict(address contr) public view returns (bool) {\\n        address contrOwner = Ownable(contr).owner();\\n        return\\n            contrOwner == address(this) ||\\n            (contrOwner == delegateOwner[contr] &&\\n                Ownable(delegateOwner[contr]).owner() == address(this));\\n    }\\n\\n    function relinquishOwnership(address ownableContract, address newOwner)\\n        external\\n        override\\n        onlyOwnerOrExec\\n    {\\n        Ownable(ownableContract).transferOwnership(newOwner);\\n    }\\n\\n    function setDisabler(address disablerAddress, bool authorized)\\n        external\\n        onlyOwnerOrExec\\n    {\\n        disabler[disablerAddress] = authorized;\\n    }\\n\\n    function executeAsOwner(address executor) external onlyOwnerOrExec {\\n        address[] memory properties = IExecutor(executor).requiredProperties();\\n        for (uint256 i = 0; properties.length > i; i++) {\\n            address property = properties[i];\\n            if (delegateOwner[property] != address(0)) {\\n                IDelegateOwner(delegateOwner[property]).relinquishOwnership(\\n                    property,\\n                    executor\\n                );\\n            } else {\\n                Ownable(property).transferOwnership(executor);\\n            }\\n        }\\n\\n        uint16[] memory requiredRoles = IExecutor(executor).requiredRoles();\\n\\n        for (uint256 i = 0; requiredRoles.length > i; i++) {\\n            _giveRole(requiredRoles[i], executor);\\n        }\\n\\n        currentExecutor = executor;\\n        IExecutor(executor).execute();\\n        currentExecutor = address(0);\\n\\n        address rightfulOwner = IExecutor(executor).rightfulOwner();\\n        require(\\n            rightfulOwner == address(this) || rightfulOwner == owner(),\\n            \\\"Executor doesn't have the right rightful owner\\\"\\n        );\\n\\n        for (uint256 i = 0; properties.length > i; i++) {\\n            address property = properties[i];\\n            require(\\n                Ownable(property).owner() == rightfulOwner,\\n                \\\"Executor did not return ownership\\\"\\n            );\\n            if (delegateOwner[property] != address(0)) {\\n                Ownable(property).transferOwnership(delegateOwner[property]);\\n            }\\n        }\\n\\n        for (uint256 i = 0; requiredRoles.length > i; i++) {\\n            _removeRole(requiredRoles[i], executor);\\n        }\\n    }\\n\\n    function manageContract(\\n        address contr,\\n        uint16[] memory charactersPlayed,\\n        uint16[] memory rolesPlayed,\\n        address[] memory ownsAsDelegate\\n    ) external onlyOwnerOrExec {\\n        managedContracts.push(contr);\\n\\n        // set up all characters this contract plays\\n        for (uint256 i = 0; charactersPlayed.length > i; i++) {\\n            uint16 character = charactersPlayed[i];\\n            _setMainCharacter(character, contr);\\n        }\\n\\n        // all roles this contract plays\\n        for (uint256 i = 0; rolesPlayed.length > i; i++) {\\n            uint16 role = rolesPlayed[i];\\n            _giveRole(role, contr);\\n        }\\n\\n        // update this contract with all characters we know about\\n        for (uint256 i = 0; allCharacters.length > i; i++) {\\n            RoleAware(contr).updateMainCharacterCache(allCharacters[i]);\\n        }\\n\\n        // update this contract with all roles for all contracts we know about\\n        for (uint256 i = 0; allRoles.length > i; i++) {\\n            for (uint256 j = 0; managedContracts.length > j; j++) {\\n                RoleAware(contr).updateRoleCache(\\n                    allRoles[i],\\n                    managedContracts[j]\\n                );\\n            }\\n        }\\n\\n        for (uint256 i = 0; ownsAsDelegate.length > i; i++) {\\n            Ownable(ownsAsDelegate[i]).transferOwnership(contr);\\n            delegateOwner[ownsAsDelegate[i]] = contr;\\n        }\\n    }\\n\\n    function disableContract(address contr) external onlyOwnerOrExecOrDisabler {\\n        _disableContract(contr);\\n    }\\n\\n    function _disableContract(address contr) internal {\\n        for (uint256 i = 0; allRoles.length > i; i++) {\\n            if (roles.getRole(allRoles[i], contr)) {\\n                _removeRole(allRoles[i], contr);\\n            }\\n        }\\n\\n        for (uint256 i = 0; allCharacters.length > i; i++) {\\n            if (roles.mainCharacters(allCharacters[i]) == contr) {\\n                _setMainCharacter(allCharacters[i], address(0));\\n            }\\n        }\\n    }\\n\\n    function giveRole(uint16 role, address actor) external onlyOwnerOrExec {\\n        _giveRole(role, actor);\\n    }\\n\\n    function removeRole(uint16 role, address actor)\\n        external\\n        onlyOwnerOrExecOrDisabler\\n    {\\n        _removeRole(role, actor);\\n    }\\n\\n    function _removeRole(uint16 role, address actor) internal {\\n        roles.removeRole(role, actor);\\n        updateRoleCache(role, actor);\\n    }\\n\\n    function setMainCharacter(uint16 role, address actor)\\n        external\\n        onlyOwnerOrExec\\n    {\\n        _setMainCharacter(role, actor);\\n    }\\n\\n    function _giveRole(uint16 role, address actor) internal {\\n        if (!knownRoles[role]) {\\n            knownRoles[role] = true;\\n            allRoles.push(role);\\n        }\\n        roles.giveRole(role, actor);\\n        updateRoleCache(role, actor);\\n    }\\n\\n    function _setMainCharacter(uint16 character, address actor) internal {\\n        if (!knownCharacters[character]) {\\n            knownCharacters[character] = true;\\n            allCharacters.push(character);\\n        }\\n        roles.setMainCharacter(character, actor);\\n        updateMainCharacterCache(character);\\n    }\\n\\n    function updateMainCharacterCache(uint16 character) public override {\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            RoleAware(managedContracts[i]).updateMainCharacterCache(character);\\n        }\\n    }\\n\\n    function updateRoleCache(uint16 role, address contr) public override {\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            RoleAware(managedContracts[i]).updateRoleCache(role, contr);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf1b45794898a6b5a6d78f66296ff69749d55ee35b8acb20f78f9a42046a7599e\",\"license\":\"GPL-2.0-only\"},\"contracts/RoleAware.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Roles.sol\\\";\\n\\n/// Main characters are for service discovery\\n/// Whereas roles are for access control\\ncontract RoleAware {\\n    uint16 public constant WITHDRAWER = 1;\\n    uint16 public constant MARGIN_CALLER = 2;\\n    uint16 public constant BORROWER = 3;\\n    uint16 public constant MARGIN_TRADER = 4;\\n    uint16 public constant FEE_SOURCE = 5;\\n    uint16 public constant LIQUIDATOR = 6;\\n    uint16 public constant AUTHORIZED_FUND_TRADER = 7;\\n    uint16 public constant INCENTIVE_REPORTER = 8;\\n    uint16 public constant TOKEN_ACTIVATOR = 9;\\n    uint16 public constant STAKE_PENALIZER = 10;\\n\\n    uint16 public constant FUND = 101;\\n    uint16 public constant LENDING = 102;\\n    uint16 public constant ROUTER = 103;\\n    uint16 public constant MARGIN_TRADING = 104;\\n    uint16 public constant FEE_CONTROLLER = 105;\\n    uint16 public constant PRICE_CONTROLLER = 106;\\n    uint16 public constant ADMIN = 107;\\n    uint16 public constant INCENTIVE_DISTRIBUTION = 108;\\n\\n    Roles public roles;\\n    mapping(uint16 => address) public mainCharacterCache;\\n    mapping(address => mapping(uint16 => bool)) public roleCache;\\n\\n    constructor(address _roles) {\\n        roles = Roles(_roles);\\n    }\\n\\n    modifier noIntermediary() {\\n        require(\\n            msg.sender == tx.origin,\\n            \\\"Currently no intermediaries allowed for this function call\\\"\\n        );\\n        _;\\n    }\\n\\n    function updateRoleCache(uint16 role, address contr) public virtual {\\n        roleCache[contr][role] = roles.getRole(role, contr);\\n    }\\n\\n    function updateMainCharacterCache(uint16 role) public virtual {\\n        mainCharacterCache[role] = roles.mainCharacters(role);\\n    }\\n\\n    function fund() internal view returns (address) {\\n        return mainCharacterCache[FUND];\\n    }\\n\\n    function lending() internal view returns (address) {\\n        return mainCharacterCache[LENDING];\\n    }\\n\\n    function router() internal view returns (address) {\\n        return mainCharacterCache[ROUTER];\\n    }\\n\\n    function marginTrading() internal view returns (address) {\\n        return mainCharacterCache[MARGIN_TRADING];\\n    }\\n\\n    function feeController() internal view returns (address) {\\n        return mainCharacterCache[FEE_CONTROLLER];\\n    }\\n\\n    function price() internal view returns (address) {\\n        return mainCharacterCache[PRICE_CONTROLLER];\\n    }\\n\\n    function admin() internal view returns (address) {\\n        return mainCharacterCache[ADMIN];\\n    }\\n\\n    function incentiveDistributor() internal view returns (address) {\\n        return mainCharacterCache[INCENTIVE_DISTRIBUTION];\\n    }\\n\\n    function isBorrower(address contr) internal view returns (bool) {\\n        return roleCache[contr][BORROWER];\\n    }\\n\\n    function isWithdrawer(address contr) internal view returns (bool) {\\n        return roleCache[contr][WITHDRAWER];\\n    }\\n\\n    function isMarginTrader(address contr) internal view returns (bool) {\\n        return roleCache[contr][MARGIN_TRADER];\\n    }\\n\\n    function isFeeSource(address contr) internal view returns (bool) {\\n        return roleCache[contr][FEE_SOURCE];\\n    }\\n\\n    function isMarginCaller(address contr) internal view returns (bool) {\\n        return roleCache[contr][MARGIN_CALLER];\\n    }\\n\\n    function isLiquidator(address contr) internal view returns (bool) {\\n        return roleCache[contr][LIQUIDATOR];\\n    }\\n\\n    function isAuthorizedFundTrader(address contr)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return roleCache[contr][AUTHORIZED_FUND_TRADER];\\n    }\\n\\n    function isIncentiveReporter(address contr) internal view returns (bool) {\\n        return roleCache[contr][INCENTIVE_REPORTER];\\n    }\\n\\n    function isTokenActivator(address contr) internal view returns (bool) {\\n        return roleCache[contr][TOKEN_ACTIVATOR];\\n    }\\n\\n    function isStakePenalizer(address contr) internal view returns (bool) {\\n        return roles.getRole(STAKE_PENALIZER, contr);\\n    }\\n}\\n\",\"keccak256\":\"0x779699aa9143f47f47fa1a42f1dcf168188654d923c76667edf723489bdbfbc6\",\"license\":\"GPL-2.0-only\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Roles is Ownable {\\n    mapping(address => mapping(uint16 => bool)) public roles;\\n    mapping(uint16 => address) public mainCharacters;\\n\\n    constructor() Ownable() {\\n        // token activation from the get-go\\n        roles[msg.sender][9] = true;\\n    }\\n\\n    function giveRole(uint16 role, address actor) external onlyOwner {\\n        roles[actor][role] = true;\\n    }\\n\\n    function removeRole(uint16 role, address actor) external onlyOwner {\\n        roles[actor][role] = false;\\n    }\\n\\n    function setMainCharacter(uint16 role, address actor) external onlyOwner {\\n        mainCharacters[role] = actor;\\n    }\\n\\n    function getRole(uint16 role, address contr) external view returns (bool) {\\n        return roles[contr][role];\\n    }\\n}\\n\",\"keccak256\":\"0x7437a9ae57cabebc07d13141ac137ffbc5a3ed8c68f2f7f7685608a2bd6a6847\",\"license\":\"GPL-2.0-only\"},\"interfaces/IDelegateOwner.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\ninterface IDelegateOwner {\\n    function relinquishOwnership(address property, address newOwner) external;\\n}\\n\",\"keccak256\":\"0x99901f8f707d14df505eb62d6a20ca017113dd5cda7ea079ae9e0c599a74d54f\",\"license\":\"GPL-2.0-only\"},\"interfaces/IExecutor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\ninterface IExecutor {\\n    function rightfulOwner() external returns (address);\\n\\n    function execute() external;\\n\\n    function requiredProperties() external returns (address[] memory);\\n\\n    function requiredRoles() external returns (uint16[] memory);\\n}\\n\",\"keccak256\":\"0x2fb86208eee5ed17cffadb24ca4575002e205a2e14e34112804f1a7af0e2f2b4\",\"license\":\"GPL-2.0-only\"}},\"version\":1}",
  "bytecode": "0x6080604052600980546001600160a01b03191690553480156200002157600080fd5b5060405162003233380380620032338339810160408190526200004491620000c2565b600080546001600160a01b0319166001600160a01b03831617815562000069620000be565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050620000f2565b3390565b600060208284031215620000d4578081fd5b81516001600160a01b0381168114620000eb578182fd5b9392505050565b61313180620001026000396000f3fe608060405234801561001057600080fd5b506004361061030a5760003560e01c8063840c53bd1161019c578063b4481652116100ee578063cacf8d4511610097578063f1ce598e11610071578063f1ce598e1461056a578063f2fde38b1461057d578063fae371de146105905761030a565b8063cacf8d4514610547578063d2e237291461054f578063d5d7ed7f146105625761030a565b8063bc2ed189116100c8578063bc2ed18914610519578063c34316c31461052c578063c76139d01461053f5761030a565b8063b4481652146104e0578063b6aa083e146104f3578063bb3a17c3146105065761030a565b8063a0098d6911610150578063a63fc1631161012a578063a63fc163146104bd578063a94c7c34146104d0578063a9cc0536146104d85761030a565b8063a0098d691461048f578063a154ce8214610497578063a1fdc458146104aa5761030a565b80638da5cb5b116101815780638da5cb5b1461046c57806392a42704146104745780639b44225b1461047c5761030a565b8063840c53bd1461044657806385f84ea3146104595761030a565b8063430ae469116102605780636a0e76c811610209578063715018a6116101e3578063715018a61461042e57806381ca66001461043657806383a49c7c1461043e5761030a565b80636a0e76c8146104005780636b60a09b146104135780636cd5cd601461041b5761030a565b80635bc92d741161023a5780635bc92d74146103dd5780635c275a39146103f057806366941984146103f85761030a565b8063430ae469146103ba57806346b88796146103cd57806348fb27b8146103d55761030a565b80631bc5d81d116102c25780632fe94def1161029c5780632fe94def1461039557806332fe7b261461039d578063392f5f64146103a55761030a565b80631bc5d81d1461037257806320e8d8191461037a5780632a0acc6a1461038d5761030a565b80631135bb7b116102f35780631135bb7b1461034257806317b7b61b146103575780631b6695071461036a5761030a565b8063065d570f1461030f5780630ba462891461032d575b600080fd5b6103176105a3565b6040516103249190612f82565b60405180910390f35b6103356105a8565b6040516103249190612d71565b610355610350366004612a0f565b610665565b005b610317610365366004612d11565b610796565b6103176107ce565b6103176107d3565b610355610388366004612cf4565b6107d8565b6103176108ca565b6103176108cf565b6103176108d4565b6103ad6108d9565b6040516103249190612d29565b6103ad6103c83660046129d7565b6108f5565b61031761091d565b610317610922565b6103556103eb366004612a47565b610927565b610317610f0d565b610317610f12565b61033561040e3660046129d7565b610f17565b6103ad6110bf565b610355610429366004612cd8565b6110db565b6103556111ca565b6103176112ac565b6103176112b1565b610317610454366004612d11565b6112b6565b6103356104673660046129d7565b6112c6565b6103ad6113d9565b6103356113f5565b61035561048a366004612cf4565b6114ae565b610317611595565b6103556104a53660046129d7565b61159a565b6103556104b83660046129d7565b611683565b6103556104cb366004612b3c565b611f0c565b610317612002565b610317612007565b6103ad6104ee366004612cd8565b61200c565b610355610501366004612cf4565b612034565b610335610514366004612cd8565b6120de565b610335610527366004612cd8565b6120f3565b61033561053a366004612b69565b612108565b610317612128565b61031761212d565b61033561055d3660046129d7565b612132565b610317612147565b6103ad610578366004612d11565b61214c565b61035561058b3660046129d7565b612183565b61035561059e366004612cf4565b6122d1565b600381565b600080546105cb9073ffffffffffffffffffffffffffffffffffffffff16610f17565b905060005b60045481101561066157600060048281548110610616577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561064b575061064b81610f17565b92505080806106599061302e565b9150506105d0565b5090565b61066d61237b565b73ffffffffffffffffffffffffffffffffffffffff1661068b6113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806106cf57506106b061237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b60405180910390fd5b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063f2fde38b90610760908490600401612d29565b600060405180830381600087803b15801561077a57600080fd5b505af115801561078e573d6000803e3d6000fd5b505050505050565b600a81815481106107a657600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600a81565b600881565b60005b6004548110156108c5576004818154811061081f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f20e8d81900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906320e8d819906108809086908690600401612f91565b600060405180830381600087803b15801561089a57600080fd5b505af11580156108ae573d6000803e3d6000fd5b5050505080806108bd9061302e565b9150506107db565b505050565b606b81565b606981565b606781565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600681565b606681565b61092f61237b565b73ffffffffffffffffffffffffffffffffffffffff1661094d6113d9565b73ffffffffffffffffffffffffffffffffffffffff161480610991575061097261237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6109c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b6004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790555b8084511115610aa2576000848281518110610a7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610a8f818761237f565b5080610a9a8161302e565b915050610a37565b5060005b8083511115610b11576000838281518110610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610afe81876124bd565b5080610b098161302e565b915050610aa6565b5060005b600a54811015610bfa578473ffffffffffffffffffffffffffffffffffffffff16636cd5cd60600a8381548110610b75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b8152600401610bb59190612f82565b600060405180830381600087803b158015610bcf57600080fd5b505af1158015610be3573d6000803e3d6000fd5b505050508080610bf29061302e565b915050610b15565b5060005b600b54811015610d7d5760005b600454811015610d6a578573ffffffffffffffffffffffffffffffffffffffff166320e8d819600b8481548110610c6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff1660048481548110610cc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610d25929173ffffffffffffffffffffffffffffffffffffffff1690600401612f91565b600060405180830381600087803b158015610d3f57600080fd5b505af1158015610d53573d6000803e3d6000fd5b505050508080610d629061302e565b915050610c0b565b5080610d758161302e565b915050610bfe565b5060005b8082511115610f0657818181518110610dc3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b866040518263ffffffff1660e01b8152600401610e039190612d29565b600060405180830381600087803b158015610e1d57600080fd5b505af1158015610e31573d6000803e3d6000fd5b505050508460076000848481518110610e73577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610efe9061302e565b915050610d81565b5050505050565b606581565b600181565b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6057600080fd5b505afa158015610f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9891906129f3565b905073ffffffffffffffffffffffffffffffffffffffff81163014806110b8575073ffffffffffffffffffffffffffffffffffffffff80841660009081526007602052604090205482821691161480156110b8575073ffffffffffffffffffffffffffffffffffffffff8381166000908152600760209081526040918290205482517f8da5cb5b000000000000000000000000000000000000000000000000000000008152925130949190911692638da5cb5b926004808301939192829003018186803b15801561106857600080fd5b505afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a091906129f3565b73ffffffffffffffffffffffffffffffffffffffff16145b9392505050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60005b6004548110156111c65760048181548110611122577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f6cd5cd6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636cd5cd6090611181908590600401612f82565b600060405180830381600087803b15801561119b57600080fd5b505af11580156111af573d6000803e3d6000fd5b5050505080806111be9061302e565b9150506110de565b5050565b6111d261237b565b73ffffffffffffffffffffffffffffffffffffffff166111f06113d9565b73ffffffffffffffffffffffffffffffffffffffff161461123d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612ef0565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b606a81565b600981565b600b81815481106107a657600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561130f57600080fd5b505afa158015611323573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134791906129f3565b905073ffffffffffffffffffffffffffffffffffffffff811630148061139f57506113706113d9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b806110b8575073ffffffffffffffffffffffffffffffffffffffff9283166000908152600760205260409020548316921691909114919050565b60035473ffffffffffffffffffffffffffffffffffffffff1690565b600080546114189073ffffffffffffffffffffffffffffffffffffffff16610f17565b905060005b60045481101561066157600060048281548110611463577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1690508280156114985750611498816112c6565b92505080806114a69061302e565b91505061141d565b6114b661237b565b73ffffffffffffffffffffffffffffffffffffffff166114d46113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806115285750600860006114fd61237b565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b80611555575061153661237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61158b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e93565b6111c682826125fc565b600281565b6115a261237b565b73ffffffffffffffffffffffffffffffffffffffff166115c06113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806116145750600860006115e961237b565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b80611641575061162261237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e93565b61168081612654565b50565b61168b61237b565b73ffffffffffffffffffffffffffffffffffffffff166116a96113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806116ed57506116ce61237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b60008173ffffffffffffffffffffffffffffffffffffffff166316a45ab76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561176d57600080fd5b505af1158015611781573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117c79190810190612b96565b905060005b8082511115611983576000828281518110611810577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff8082166000908152600790935260409092205490925016156118eb5773ffffffffffffffffffffffffffffffffffffffff808216600090815260076020526040908190205490517f1135bb7b000000000000000000000000000000000000000000000000000000008152911690631135bb7b906118b49084908890600401612d4a565b600060405180830381600087803b1580156118ce57600080fd5b505af11580156118e2573d6000803e3d6000fd5b50505050611970565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2fde38b9061193d908790600401612d29565b600060405180830381600087803b15801561195757600080fd5b505af115801561196b573d6000803e3d6000fd5b505050505b508061197b8161302e565b9150506117cc565b5060008273ffffffffffffffffffffffffffffffffffffffff1663cd28fc8f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119ce57600080fd5b505af11580156119e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611a289190810190612c2f565b905060005b8082511115611a9257611a80828281518110611a72577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151856124bd565b80611a8a8161302e565b915050611a2d565b50600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155604080517f61461954000000000000000000000000000000000000000000000000000000008152905163614619549160048082019260009290919082900301818387803b158015611b2657600080fd5b505af1158015611b3a573d6000803e3d6000fd5b5050600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555050604080517f4865cbc2000000000000000000000000000000000000000000000000000000008152905160009173ffffffffffffffffffffffffffffffffffffffff861691634865cbc29160048082019260209290919082900301818787803b158015611bd157600080fd5b505af1158015611be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0991906129f3565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611c615750611c326113d9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612f25565b60005b8084511115611ea3576000848281518110611cde577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d4557600080fd5b505afa158015611d59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7d91906129f3565b73ffffffffffffffffffffffffffffffffffffffff1614611dca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612d7c565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600760205260409020541615611e905773ffffffffffffffffffffffffffffffffffffffff808216600081815260076020526040908190205490517ff2fde38b000000000000000000000000000000000000000000000000000000008152919263f2fde38b92611e5d9290911690600401612d29565b600060405180830381600087803b158015611e7757600080fd5b505af1158015611e8b573d6000803e3d6000fd5b505050505b5080611e9b8161302e565b915050611c9a565b5060005b8083511115610f0657611efa838281518110611eec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151866125fc565b80611f048161302e565b915050611ea7565b611f1461237b565b73ffffffffffffffffffffffffffffffffffffffff16611f326113d9565b73ffffffffffffffffffffffffffffffffffffffff161480611f765750611f5761237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611fac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600581565b606881565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61203c61237b565b73ffffffffffffffffffffffffffffffffffffffff1661205a6113d9565b73ffffffffffffffffffffffffffffffffffffffff16148061209e575061207f61237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6120d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b6111c682826124bd565b60066020526000908152604090205460ff1681565b60056020526000908152604090205460ff1681565b600260209081526000928352604080842090915290825290205460ff1681565b606c81565b600481565b60086020526000908152604090205460ff1681565b600781565b6004818154811061215c57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b61218b61237b565b73ffffffffffffffffffffffffffffffffffffffff166121a96113d9565b73ffffffffffffffffffffffffffffffffffffffff16146121f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612ef0565b73ffffffffffffffffffffffffffffffffffffffff8116612243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612dd9565b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6122d961237b565b73ffffffffffffffffffffffffffffffffffffffff166122f76113d9565b73ffffffffffffffffffffffffffffffffffffffff16148061233b575061231c61237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b6111c6828261237f565b3390565b61ffff821660009081526005602052604090205460ff1661242a5761ffff808316600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600a80549182018155909152601081047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546002600f909316929092026101000a9283029290930219161790555b6000546040517ffae371de00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063fae371de906124829085908590600401612f91565b600060405180830381600087803b15801561249c57600080fd5b505af11580156124b0573d6000803e3d6000fd5b505050506111c6826110db565b61ffff821660009081526006602052604090205460ff166125685761ffff808316600081815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600b80549182018155909152601081047f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546002600f909316929092026101000a9283029290930219161790555b6000546040517fb6aa083e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b6aa083e906125c09085908590600401612f91565b600060405180830381600087803b1580156125da57600080fd5b505af11580156125ee573d6000803e3d6000fd5b505050506111c682826107d8565b6000546040517f9b44225b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b44225b906125c09085908590600401612f91565b60005b600b548110156127cf57600054600b805473ffffffffffffffffffffffffffffffffffffffff9092169163d87fefd29190849081106126bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16846040518363ffffffff1660e01b8152600401612701929190612f91565b60206040518083038186803b15801561271957600080fd5b505afa15801561272d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127519190612cbc565b156127bd576127bd600b8281548110612793577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16836125fc565b806127c78161302e565b915050612657565b5060005b600a548110156111c657600054600a805473ffffffffffffffffffffffffffffffffffffffff808616931691633c9c8f9c918590811061283c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b815260040161287c9190612f82565b60206040518083038186803b15801561289457600080fd5b505afa1580156128a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128cc91906129f3565b73ffffffffffffffffffffffffffffffffffffffff16141561295057612950600a8281548110612925577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16600061237f565b8061295a8161302e565b9150506127d3565b600082601f830112612972578081fd5b813560206129876129828361300a565b612fbb565b82815281810190858301838502870184018810156129a3578586fd5b855b858110156129ca5781356129b8816130eb565b845292840192908401906001016129a5565b5090979650505050505050565b6000602082840312156129e8578081fd5b81356110b8816130bb565b600060208284031215612a04578081fd5b81516110b8816130bb565b60008060408385031215612a21578081fd5b8235612a2c816130bb565b91506020830135612a3c816130bb565b809150509250929050565b60008060008060808587031215612a5c578182fd5b8435612a67816130bb565b935060208581013567ffffffffffffffff80821115612a84578485fd5b612a9089838a01612962565b95506040880135915080821115612aa5578485fd5b612ab189838a01612962565b94506060880135915080821115612ac6578384fd5b508601601f81018813612ad7578283fd5b8035612ae56129828261300a565b81815283810190838501858402850186018c1015612b01578687fd5b8694505b83851015612b2c578035612b18816130bb565b835260019490940193918501918501612b05565b50979a9699509497505050505050565b60008060408385031215612b4e578182fd5b8235612b59816130bb565b91506020830135612a3c816130dd565b60008060408385031215612b7b578182fd5b8235612b86816130bb565b91506020830135612a3c816130eb565b60006020808385031215612ba8578182fd5b825167ffffffffffffffff811115612bbe578283fd5b8301601f81018513612bce578283fd5b8051612bdc6129828261300a565b8181528381019083850185840285018601891015612bf8578687fd5b8694505b83851015612c23578051612c0f816130bb565b835260019490940193918501918501612bfc565b50979650505050505050565b60006020808385031215612c41578182fd5b825167ffffffffffffffff811115612c57578283fd5b8301601f81018513612c67578283fd5b8051612c756129828261300a565b8181528381019083850185840285018601891015612c91578687fd5b8694505b83851015612c23578051612ca8816130eb565b835260019490940193918501918501612c95565b600060208284031215612ccd578081fd5b81516110b8816130dd565b600060208284031215612ce9578081fd5b81356110b8816130eb565b60008060408385031215612d06578182fd5b8235612a2c816130eb565b600060208284031215612d22578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b901515815260200190565b60208082526021908201527f4578656375746f7220646964206e6f742072657475726e206f776e657273686960408201527f7000000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220657865637560408201527f746f720000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220617574686f60408201527f72697a65642064697361626c6572206f72206578656375746f72000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f4578656375746f7220646f65736e27742068617665207468652072696768742060408201527f726967687466756c206f776e6572000000000000000000000000000000000000606082015260800190565b61ffff91909116815260200190565b61ffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156130025761300261308c565b604052919050565b600067ffffffffffffffff8211156130245761302461308c565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613085577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461168057600080fd5b801515811461168057600080fd5b61ffff8116811461168057600080fdfea2646970667358221220c6768630493c28699f8cc19e8862eb0b4310a7cf1530e88c47ff8edf6a7121ad64736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061030a5760003560e01c8063840c53bd1161019c578063b4481652116100ee578063cacf8d4511610097578063f1ce598e11610071578063f1ce598e1461056a578063f2fde38b1461057d578063fae371de146105905761030a565b8063cacf8d4514610547578063d2e237291461054f578063d5d7ed7f146105625761030a565b8063bc2ed189116100c8578063bc2ed18914610519578063c34316c31461052c578063c76139d01461053f5761030a565b8063b4481652146104e0578063b6aa083e146104f3578063bb3a17c3146105065761030a565b8063a0098d6911610150578063a63fc1631161012a578063a63fc163146104bd578063a94c7c34146104d0578063a9cc0536146104d85761030a565b8063a0098d691461048f578063a154ce8214610497578063a1fdc458146104aa5761030a565b80638da5cb5b116101815780638da5cb5b1461046c57806392a42704146104745780639b44225b1461047c5761030a565b8063840c53bd1461044657806385f84ea3146104595761030a565b8063430ae469116102605780636a0e76c811610209578063715018a6116101e3578063715018a61461042e57806381ca66001461043657806383a49c7c1461043e5761030a565b80636a0e76c8146104005780636b60a09b146104135780636cd5cd601461041b5761030a565b80635bc92d741161023a5780635bc92d74146103dd5780635c275a39146103f057806366941984146103f85761030a565b8063430ae469146103ba57806346b88796146103cd57806348fb27b8146103d55761030a565b80631bc5d81d116102c25780632fe94def1161029c5780632fe94def1461039557806332fe7b261461039d578063392f5f64146103a55761030a565b80631bc5d81d1461037257806320e8d8191461037a5780632a0acc6a1461038d5761030a565b80631135bb7b116102f35780631135bb7b1461034257806317b7b61b146103575780631b6695071461036a5761030a565b8063065d570f1461030f5780630ba462891461032d575b600080fd5b6103176105a3565b6040516103249190612f82565b60405180910390f35b6103356105a8565b6040516103249190612d71565b610355610350366004612a0f565b610665565b005b610317610365366004612d11565b610796565b6103176107ce565b6103176107d3565b610355610388366004612cf4565b6107d8565b6103176108ca565b6103176108cf565b6103176108d4565b6103ad6108d9565b6040516103249190612d29565b6103ad6103c83660046129d7565b6108f5565b61031761091d565b610317610922565b6103556103eb366004612a47565b610927565b610317610f0d565b610317610f12565b61033561040e3660046129d7565b610f17565b6103ad6110bf565b610355610429366004612cd8565b6110db565b6103556111ca565b6103176112ac565b6103176112b1565b610317610454366004612d11565b6112b6565b6103356104673660046129d7565b6112c6565b6103ad6113d9565b6103356113f5565b61035561048a366004612cf4565b6114ae565b610317611595565b6103556104a53660046129d7565b61159a565b6103556104b83660046129d7565b611683565b6103556104cb366004612b3c565b611f0c565b610317612002565b610317612007565b6103ad6104ee366004612cd8565b61200c565b610355610501366004612cf4565b612034565b610335610514366004612cd8565b6120de565b610335610527366004612cd8565b6120f3565b61033561053a366004612b69565b612108565b610317612128565b61031761212d565b61033561055d3660046129d7565b612132565b610317612147565b6103ad610578366004612d11565b61214c565b61035561058b3660046129d7565b612183565b61035561059e366004612cf4565b6122d1565b600381565b600080546105cb9073ffffffffffffffffffffffffffffffffffffffff16610f17565b905060005b60045481101561066157600060048281548110610616577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561064b575061064b81610f17565b92505080806106599061302e565b9150506105d0565b5090565b61066d61237b565b73ffffffffffffffffffffffffffffffffffffffff1661068b6113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806106cf57506106b061237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b60405180910390fd5b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063f2fde38b90610760908490600401612d29565b600060405180830381600087803b15801561077a57600080fd5b505af115801561078e573d6000803e3d6000fd5b505050505050565b600a81815481106107a657600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600a81565b600881565b60005b6004548110156108c5576004818154811061081f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f20e8d81900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906320e8d819906108809086908690600401612f91565b600060405180830381600087803b15801561089a57600080fd5b505af11580156108ae573d6000803e3d6000fd5b5050505080806108bd9061302e565b9150506107db565b505050565b606b81565b606981565b606781565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600681565b606681565b61092f61237b565b73ffffffffffffffffffffffffffffffffffffffff1661094d6113d9565b73ffffffffffffffffffffffffffffffffffffffff161480610991575061097261237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6109c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b6004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790555b8084511115610aa2576000848281518110610a7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610a8f818761237f565b5080610a9a8161302e565b915050610a37565b5060005b8083511115610b11576000838281518110610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610afe81876124bd565b5080610b098161302e565b915050610aa6565b5060005b600a54811015610bfa578473ffffffffffffffffffffffffffffffffffffffff16636cd5cd60600a8381548110610b75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b8152600401610bb59190612f82565b600060405180830381600087803b158015610bcf57600080fd5b505af1158015610be3573d6000803e3d6000fd5b505050508080610bf29061302e565b915050610b15565b5060005b600b54811015610d7d5760005b600454811015610d6a578573ffffffffffffffffffffffffffffffffffffffff166320e8d819600b8481548110610c6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff1660048481548110610cc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610d25929173ffffffffffffffffffffffffffffffffffffffff1690600401612f91565b600060405180830381600087803b158015610d3f57600080fd5b505af1158015610d53573d6000803e3d6000fd5b505050508080610d629061302e565b915050610c0b565b5080610d758161302e565b915050610bfe565b5060005b8082511115610f0657818181518110610dc3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b866040518263ffffffff1660e01b8152600401610e039190612d29565b600060405180830381600087803b158015610e1d57600080fd5b505af1158015610e31573d6000803e3d6000fd5b505050508460076000848481518110610e73577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610efe9061302e565b915050610d81565b5050505050565b606581565b600181565b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6057600080fd5b505afa158015610f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9891906129f3565b905073ffffffffffffffffffffffffffffffffffffffff81163014806110b8575073ffffffffffffffffffffffffffffffffffffffff80841660009081526007602052604090205482821691161480156110b8575073ffffffffffffffffffffffffffffffffffffffff8381166000908152600760209081526040918290205482517f8da5cb5b000000000000000000000000000000000000000000000000000000008152925130949190911692638da5cb5b926004808301939192829003018186803b15801561106857600080fd5b505afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a091906129f3565b73ffffffffffffffffffffffffffffffffffffffff16145b9392505050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60005b6004548110156111c65760048181548110611122577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f6cd5cd6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636cd5cd6090611181908590600401612f82565b600060405180830381600087803b15801561119b57600080fd5b505af11580156111af573d6000803e3d6000fd5b5050505080806111be9061302e565b9150506110de565b5050565b6111d261237b565b73ffffffffffffffffffffffffffffffffffffffff166111f06113d9565b73ffffffffffffffffffffffffffffffffffffffff161461123d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612ef0565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b606a81565b600981565b600b81815481106107a657600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561130f57600080fd5b505afa158015611323573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134791906129f3565b905073ffffffffffffffffffffffffffffffffffffffff811630148061139f57506113706113d9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b806110b8575073ffffffffffffffffffffffffffffffffffffffff9283166000908152600760205260409020548316921691909114919050565b60035473ffffffffffffffffffffffffffffffffffffffff1690565b600080546114189073ffffffffffffffffffffffffffffffffffffffff16610f17565b905060005b60045481101561066157600060048281548110611463577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1690508280156114985750611498816112c6565b92505080806114a69061302e565b91505061141d565b6114b661237b565b73ffffffffffffffffffffffffffffffffffffffff166114d46113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806115285750600860006114fd61237b565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b80611555575061153661237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61158b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e93565b6111c682826125fc565b600281565b6115a261237b565b73ffffffffffffffffffffffffffffffffffffffff166115c06113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806116145750600860006115e961237b565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b80611641575061162261237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e93565b61168081612654565b50565b61168b61237b565b73ffffffffffffffffffffffffffffffffffffffff166116a96113d9565b73ffffffffffffffffffffffffffffffffffffffff1614806116ed57506116ce61237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b60008173ffffffffffffffffffffffffffffffffffffffff166316a45ab76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561176d57600080fd5b505af1158015611781573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526117c79190810190612b96565b905060005b8082511115611983576000828281518110611810577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff8082166000908152600790935260409092205490925016156118eb5773ffffffffffffffffffffffffffffffffffffffff808216600090815260076020526040908190205490517f1135bb7b000000000000000000000000000000000000000000000000000000008152911690631135bb7b906118b49084908890600401612d4a565b600060405180830381600087803b1580156118ce57600080fd5b505af11580156118e2573d6000803e3d6000fd5b50505050611970565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2fde38b9061193d908790600401612d29565b600060405180830381600087803b15801561195757600080fd5b505af115801561196b573d6000803e3d6000fd5b505050505b508061197b8161302e565b9150506117cc565b5060008273ffffffffffffffffffffffffffffffffffffffff1663cd28fc8f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119ce57600080fd5b505af11580156119e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611a289190810190612c2f565b905060005b8082511115611a9257611a80828281518110611a72577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151856124bd565b80611a8a8161302e565b915050611a2d565b50600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155604080517f61461954000000000000000000000000000000000000000000000000000000008152905163614619549160048082019260009290919082900301818387803b158015611b2657600080fd5b505af1158015611b3a573d6000803e3d6000fd5b5050600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555050604080517f4865cbc2000000000000000000000000000000000000000000000000000000008152905160009173ffffffffffffffffffffffffffffffffffffffff861691634865cbc29160048082019260209290919082900301818787803b158015611bd157600080fd5b505af1158015611be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0991906129f3565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611c615750611c326113d9565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612f25565b60005b8084511115611ea3576000848281518110611cde577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d4557600080fd5b505afa158015611d59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7d91906129f3565b73ffffffffffffffffffffffffffffffffffffffff1614611dca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612d7c565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600760205260409020541615611e905773ffffffffffffffffffffffffffffffffffffffff808216600081815260076020526040908190205490517ff2fde38b000000000000000000000000000000000000000000000000000000008152919263f2fde38b92611e5d9290911690600401612d29565b600060405180830381600087803b158015611e7757600080fd5b505af1158015611e8b573d6000803e3d6000fd5b505050505b5080611e9b8161302e565b915050611c9a565b5060005b8083511115610f0657611efa838281518110611eec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151866125fc565b80611f048161302e565b915050611ea7565b611f1461237b565b73ffffffffffffffffffffffffffffffffffffffff16611f326113d9565b73ffffffffffffffffffffffffffffffffffffffff161480611f765750611f5761237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611fac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600581565b606881565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61203c61237b565b73ffffffffffffffffffffffffffffffffffffffff1661205a6113d9565b73ffffffffffffffffffffffffffffffffffffffff16148061209e575061207f61237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6120d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b6111c682826124bd565b60066020526000908152604090205460ff1681565b60056020526000908152604090205460ff1681565b600260209081526000928352604080842090915290825290205460ff1681565b606c81565b600481565b60086020526000908152604090205460ff1681565b600781565b6004818154811061215c57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b61218b61237b565b73ffffffffffffffffffffffffffffffffffffffff166121a96113d9565b73ffffffffffffffffffffffffffffffffffffffff16146121f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612ef0565b73ffffffffffffffffffffffffffffffffffffffff8116612243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612dd9565b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6122d961237b565b73ffffffffffffffffffffffffffffffffffffffff166122f76113d9565b73ffffffffffffffffffffffffffffffffffffffff16148061233b575061231c61237b565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070590612e36565b6111c6828261237f565b3390565b61ffff821660009081526005602052604090205460ff1661242a5761ffff808316600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600a80549182018155909152601081047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546002600f909316929092026101000a9283029290930219161790555b6000546040517ffae371de00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063fae371de906124829085908590600401612f91565b600060405180830381600087803b15801561249c57600080fd5b505af11580156124b0573d6000803e3d6000fd5b505050506111c6826110db565b61ffff821660009081526006602052604090205460ff166125685761ffff808316600081815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600b80549182018155909152601081047f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546002600f909316929092026101000a9283029290930219161790555b6000546040517fb6aa083e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b6aa083e906125c09085908590600401612f91565b600060405180830381600087803b1580156125da57600080fd5b505af11580156125ee573d6000803e3d6000fd5b505050506111c682826107d8565b6000546040517f9b44225b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b44225b906125c09085908590600401612f91565b60005b600b548110156127cf57600054600b805473ffffffffffffffffffffffffffffffffffffffff9092169163d87fefd29190849081106126bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16846040518363ffffffff1660e01b8152600401612701929190612f91565b60206040518083038186803b15801561271957600080fd5b505afa15801561272d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127519190612cbc565b156127bd576127bd600b8281548110612793577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16836125fc565b806127c78161302e565b915050612657565b5060005b600a548110156111c657600054600a805473ffffffffffffffffffffffffffffffffffffffff808616931691633c9c8f9c918590811061283c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b815260040161287c9190612f82565b60206040518083038186803b15801561289457600080fd5b505afa1580156128a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128cc91906129f3565b73ffffffffffffffffffffffffffffffffffffffff16141561295057612950600a8281548110612925577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16600061237f565b8061295a8161302e565b9150506127d3565b600082601f830112612972578081fd5b813560206129876129828361300a565b612fbb565b82815281810190858301838502870184018810156129a3578586fd5b855b858110156129ca5781356129b8816130eb565b845292840192908401906001016129a5565b5090979650505050505050565b6000602082840312156129e8578081fd5b81356110b8816130bb565b600060208284031215612a04578081fd5b81516110b8816130bb565b60008060408385031215612a21578081fd5b8235612a2c816130bb565b91506020830135612a3c816130bb565b809150509250929050565b60008060008060808587031215612a5c578182fd5b8435612a67816130bb565b935060208581013567ffffffffffffffff80821115612a84578485fd5b612a9089838a01612962565b95506040880135915080821115612aa5578485fd5b612ab189838a01612962565b94506060880135915080821115612ac6578384fd5b508601601f81018813612ad7578283fd5b8035612ae56129828261300a565b81815283810190838501858402850186018c1015612b01578687fd5b8694505b83851015612b2c578035612b18816130bb565b835260019490940193918501918501612b05565b50979a9699509497505050505050565b60008060408385031215612b4e578182fd5b8235612b59816130bb565b91506020830135612a3c816130dd565b60008060408385031215612b7b578182fd5b8235612b86816130bb565b91506020830135612a3c816130eb565b60006020808385031215612ba8578182fd5b825167ffffffffffffffff811115612bbe578283fd5b8301601f81018513612bce578283fd5b8051612bdc6129828261300a565b8181528381019083850185840285018601891015612bf8578687fd5b8694505b83851015612c23578051612c0f816130bb565b835260019490940193918501918501612bfc565b50979650505050505050565b60006020808385031215612c41578182fd5b825167ffffffffffffffff811115612c57578283fd5b8301601f81018513612c67578283fd5b8051612c756129828261300a565b8181528381019083850185840285018601891015612c91578687fd5b8694505b83851015612c23578051612ca8816130eb565b835260019490940193918501918501612c95565b600060208284031215612ccd578081fd5b81516110b8816130dd565b600060208284031215612ce9578081fd5b81356110b8816130eb565b60008060408385031215612d06578182fd5b8235612a2c816130eb565b600060208284031215612d22578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b901515815260200190565b60208082526021908201527f4578656375746f7220646964206e6f742072657475726e206f776e657273686960408201527f7000000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220657865637560408201527f746f720000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220617574686f60408201527f72697a65642064697361626c6572206f72206578656375746f72000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f4578656375746f7220646f65736e27742068617665207468652072696768742060408201527f726967687466756c206f776e6572000000000000000000000000000000000000606082015260800190565b61ffff91909116815260200190565b61ffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156130025761300261308c565b604052919050565b600067ffffffffffffffff8211156130245761302461308c565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613085577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461168057600080fd5b801515811461168057600080fd5b61ffff8116811461168057600080fdfea2646970667358221220c6768630493c28699f8cc19e8862eb0b4310a7cf1530e88c47ff8edf6a7121ad64736f6c63430008010033",
  "devdoc": {
    "details": "Provides a single point of reference to verify ownership integrity within our system as well as performing cache invalidation for roles and inter-contract relationships",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11718,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Roles)12108"
      },
      {
        "astId": 11722,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "mainCharacterCache",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_address)"
      },
      {
        "astId": 11728,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "roleCache",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_bool))"
      },
      {
        "astId": 381,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6939,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "managedContracts",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6943,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "knownCharacters",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint16,t_bool)"
      },
      {
        "astId": 6947,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "knownRoles",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint16,t_bool)"
      },
      {
        "astId": 6951,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "delegateOwner",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6955,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "disabler",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6961,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "currentExecutor",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 6964,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "allCharacters",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint16)dyn_storage"
      },
      {
        "astId": 6967,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "allRoles",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_uint16)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint16)dyn_storage": {
        "base": "t_uint16",
        "encoding": "dynamic_array",
        "label": "uint16[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Roles)12108": {
        "encoding": "inplace",
        "label": "contract Roles",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_bool)"
      },
      "t_mapping(t_uint16,t_address)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint16,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      }
    }
  }
}
{
  "address": "0xb78a7d9b8FdbC7ea732519e5f3f175d17C7c00C1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_roles",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AUTHORIZED_FUND_TRADER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BORROWER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_CONTROLLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_SOURCE",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUND",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INCENTIVE_DISTRIBUTION",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INCENTIVE_REPORTER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LENDING",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATOR",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_CALLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_TRADER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_TRADING",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_CONTROLLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKE_PENALIZER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN_ACTIVATOR",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN_ADMIN",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allCharacters",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allManagedContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allRoles",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentExecutor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegateOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "disabler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        }
      ],
      "name": "executeAsOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "giveRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "knownCharacters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "knownRoles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "mainCharacterCache",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        },
        {
          "internalType": "uint16[]",
          "name": "charactersPlayed",
          "type": "uint16[]"
        },
        {
          "internalType": "uint16[]",
          "name": "rolesPlayed",
          "type": "uint16[]"
        },
        {
          "internalType": "address[]",
          "name": "ownsAsDelegate",
          "type": "address[]"
        }
      ],
      "name": "manageContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "managedContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "ownsContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "ownsContractStrict",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownableContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "relinquishOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "removeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "roleCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roles",
      "outputs": [
        {
          "internalType": "contract Roles",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disablerAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "setDisabler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "setMainCharacter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "character",
          "type": "uint16"
        }
      ],
      "name": "updateMainCharacterCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "updateRoleCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyOwnership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ownsAll",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyOwnershipStrict",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ownsAll",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x03eacc20bcd84c910792e7a9b494e5bba26322e7f75a4a02a8fb5286b4fa7dce",
  "receipt": {
    "to": null,
    "from": "0x23292e9BA8434e59E6BAC1907bA7425211c4DE27",
    "contractAddress": "0xb78a7d9b8FdbC7ea732519e5f3f175d17C7c00C1",
    "transactionIndex": 2,
    "gasUsed": "2858721",
    "logsBloom": "0x
    "blockHash": "0x2a59798c6b8474cc89c839d39e5b358b102c6ba544fc06a437f01410460970ac",
    "transactionHash": "0x03eacc20bcd84c910792e7a9b494e5bba26322e7f75a4a02a8fb5286b4fa7dce",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 24020968,
        "transactionHash": "0x03eacc20bcd84c910792e7a9b494e5bba26322e7f75a4a02a8fb5286b4fa7dce",
        "address": "0xb78a7d9b8FdbC7ea732519e5f3f175d17C7c00C1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000023292e9ba8434e59e6bac1907ba7425211c4de27"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x2a59798c6b8474cc89c839d39e5b358b102c6ba544fc06a437f01410460970ac"
      }
    ],
    "blockNumber": 24020968,
    "cumulativeGasUsed": "5754888",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd4A8F00F37f3B965bF94C112B83b94e7526732eF"
  ],
  "solcInputHash": "0557d1b5995c44fa5d0d24bcc83ad705",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_roles\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AUTHORIZED_FUND_TRADER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BORROWER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_CONTROLLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_SOURCE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FUND\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INCENTIVE_DISTRIBUTION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INCENTIVE_REPORTER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDING\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_CALLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_TRADER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_TRADING\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_CONTROLLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_PENALIZER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_ACTIVATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_ADMIN\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allCharacters\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allManagedContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRoles\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegateOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disabler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"executeAsOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"giveRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"knownCharacters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"knownRoles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"mainCharacterCache\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"},{\"internalType\":\"uint16[]\",\"name\":\"charactersPlayed\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16[]\",\"name\":\"rolesPlayed\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"ownsAsDelegate\",\"type\":\"address[]\"}],\"name\":\"manageContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"managedContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"ownsContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"ownsContractStrict\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownableContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"relinquishOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"roleCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"contract Roles\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disablerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setDisabler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"setMainCharacter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"character\",\"type\":\"uint16\"}],\"name\":\"updateMainCharacterCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"updateRoleCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ownsAll\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyOwnershipStrict\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ownsAll\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides a single point of reference to verify ownership integrity within our system as well as performing cache invalidation for roles and inter-contract relationships\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DependencyController.sol\":\"DependencyController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/DependencyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"./RoleAware.sol\\\";\\nimport \\\"../interfaces/IExecutor.sol\\\";\\nimport \\\"../interfaces/IDelegateOwner.sol\\\";\\n\\n/// @dev Provides a single point of reference to verify ownership integrity\\n/// within our system as well as performing cache invalidation for\\n/// roles and inter-contract relationships\\ncontract DependencyController is RoleAware, Ownable, IDelegateOwner {\\n    constructor(address _roles) RoleAware(_roles) Ownable() {}\\n\\n    address[] public managedContracts;\\n    mapping(uint16 => bool) public knownCharacters;\\n    mapping(uint16 => bool) public knownRoles;\\n    mapping(address => address) public delegateOwner;\\n    mapping(address => bool) public disabler;\\n    address public currentExecutor = address(0);\\n\\n    uint16[] public allCharacters;\\n    uint16[] public allRoles;\\n\\n    modifier onlyOwnerOrExecOrDisabler() {\\n        require(\\n            owner() == _msgSender() ||\\n                disabler[_msgSender()] ||\\n                currentExecutor == _msgSender(),\\n            \\\"Caller is not the owner or authorized disabler or executor\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyOwnerOrExec() {\\n        require(\\n            owner() == _msgSender() || currentExecutor == _msgSender(),\\n            \\\"Caller is not the owner or executor\\\"\\n        );\\n        _;\\n    }\\n\\n    function verifyOwnership() external view returns (bool ownsAll) {\\n        ownsAll = ownsContractStrict(address(roles));\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            address contr = managedContracts[i];\\n            ownsAll = ownsAll && ownsContract(contr);\\n        }\\n    }\\n\\n    function verifyOwnershipStrict() external view returns (bool ownsAll) {\\n        ownsAll = ownsContractStrict(address(roles));\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            address contr = managedContracts[i];\\n            ownsAll = ownsAll && ownsContractStrict(contr);\\n        }\\n    }\\n\\n    function ownsContract(address contr) public view returns (bool) {\\n        address contrOwner = Ownable(contr).owner();\\n        return\\n            contrOwner == address(this) ||\\n            contrOwner == owner() ||\\n            contrOwner == delegateOwner[contr];\\n    }\\n\\n    function ownsContractStrict(address contr) public view returns (bool) {\\n        address contrOwner = Ownable(contr).owner();\\n        return\\n            contrOwner == address(this) ||\\n            (contrOwner == delegateOwner[contr] &&\\n                Ownable(delegateOwner[contr]).owner() == address(this));\\n    }\\n\\n    function relinquishOwnership(address ownableContract, address newOwner)\\n        external\\n        override\\n        onlyOwnerOrExec\\n    {\\n        Ownable(ownableContract).transferOwnership(newOwner);\\n    }\\n\\n    function setDisabler(address disablerAddress, bool authorized)\\n        external\\n        onlyOwnerOrExec\\n    {\\n        disabler[disablerAddress] = authorized;\\n    }\\n\\n    function executeAsOwner(address executor) external onlyOwnerOrExec {\\n        address[] memory properties = IExecutor(executor).requiredProperties();\\n        for (uint256 i = 0; properties.length > i; i++) {\\n            address property = properties[i];\\n            if (delegateOwner[property] != address(0)) {\\n                IDelegateOwner(delegateOwner[property]).relinquishOwnership(\\n                    property,\\n                    executor\\n                );\\n            } else {\\n                Ownable(property).transferOwnership(executor);\\n            }\\n        }\\n\\n        uint16[] memory requiredRoles = IExecutor(executor).requiredRoles();\\n\\n        for (uint256 i = 0; requiredRoles.length > i; i++) {\\n            _giveRole(requiredRoles[i], executor);\\n        }\\n\\n        currentExecutor = executor;\\n        IExecutor(executor).execute();\\n        currentExecutor = address(0);\\n\\n        address rightfulOwner = IExecutor(executor).rightfulOwner();\\n        require(\\n            rightfulOwner == address(this) || rightfulOwner == owner(),\\n            \\\"Executor doesn't have the right rightful owner\\\"\\n        );\\n\\n        for (uint256 i = 0; properties.length > i; i++) {\\n            address property = properties[i];\\n            require(\\n                Ownable(property).owner() == rightfulOwner,\\n                \\\"Executor did not return ownership\\\"\\n            );\\n            if (delegateOwner[property] != address(0)) {\\n                Ownable(property).transferOwnership(delegateOwner[property]);\\n            }\\n        }\\n\\n        for (uint256 i = 0; requiredRoles.length > i; i++) {\\n            _removeRole(requiredRoles[i], executor);\\n        }\\n    }\\n\\n    function manageContract(\\n        address contr,\\n        uint16[] memory charactersPlayed,\\n        uint16[] memory rolesPlayed,\\n        address[] memory ownsAsDelegate\\n    ) external onlyOwnerOrExec {\\n        managedContracts.push(contr);\\n\\n        // set up all characters this contract plays\\n        for (uint256 i = 0; charactersPlayed.length > i; i++) {\\n            uint16 character = charactersPlayed[i];\\n            _setMainCharacter(character, contr);\\n        }\\n\\n        // all roles this contract plays\\n        for (uint256 i = 0; rolesPlayed.length > i; i++) {\\n            uint16 role = rolesPlayed[i];\\n            _giveRole(role, contr);\\n        }\\n\\n        // update this contract with all characters we know about\\n        for (uint256 i = 0; allCharacters.length > i; i++) {\\n            RoleAware(contr).updateMainCharacterCache(allCharacters[i]);\\n        }\\n\\n        // update this contract with all roles for all contracts we know about\\n        for (uint256 i = 0; allRoles.length > i; i++) {\\n            for (uint256 j = 0; managedContracts.length > j; j++) {\\n                RoleAware(contr).updateRoleCache(\\n                    allRoles[i],\\n                    managedContracts[j]\\n                );\\n            }\\n        }\\n\\n        for (uint256 i = 0; ownsAsDelegate.length > i; i++) {\\n            Ownable(ownsAsDelegate[i]).transferOwnership(contr);\\n            delegateOwner[ownsAsDelegate[i]] = contr;\\n        }\\n    }\\n\\n    function disableContract(address contr) external onlyOwnerOrExecOrDisabler {\\n        _disableContract(contr);\\n    }\\n\\n    function _disableContract(address contr) internal {\\n        for (uint256 i = 0; allRoles.length > i; i++) {\\n            if (roles.getRole(allRoles[i], contr)) {\\n                _removeRole(allRoles[i], contr);\\n            }\\n        }\\n\\n        for (uint256 i = 0; allCharacters.length > i; i++) {\\n            if (roles.mainCharacters(allCharacters[i]) == contr) {\\n                _setMainCharacter(allCharacters[i], address(0));\\n            }\\n        }\\n    }\\n\\n    function giveRole(uint16 role, address actor) external onlyOwnerOrExec {\\n        _giveRole(role, actor);\\n    }\\n\\n    function removeRole(uint16 role, address actor)\\n        external\\n        onlyOwnerOrExecOrDisabler\\n    {\\n        _removeRole(role, actor);\\n    }\\n\\n    function _removeRole(uint16 role, address actor) internal {\\n        roles.removeRole(role, actor);\\n        updateRoleCache(role, actor);\\n    }\\n\\n    function setMainCharacter(uint16 role, address actor)\\n        external\\n        onlyOwnerOrExec\\n    {\\n        _setMainCharacter(role, actor);\\n    }\\n\\n    function _giveRole(uint16 role, address actor) internal {\\n        if (!knownRoles[role]) {\\n            knownRoles[role] = true;\\n            allRoles.push(role);\\n        }\\n        roles.giveRole(role, actor);\\n        updateRoleCache(role, actor);\\n    }\\n\\n    function _setMainCharacter(uint16 character, address actor) internal {\\n        if (!knownCharacters[character]) {\\n            knownCharacters[character] = true;\\n            allCharacters.push(character);\\n        }\\n        roles.setMainCharacter(character, actor);\\n        updateMainCharacterCache(character);\\n    }\\n\\n    function updateMainCharacterCache(uint16 character) public override {\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            RoleAware(managedContracts[i]).updateMainCharacterCache(character);\\n        }\\n    }\\n\\n    function updateRoleCache(uint16 role, address contr) public override {\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            RoleAware(managedContracts[i]).updateRoleCache(role, contr);\\n        }\\n    }\\n\\n    function allManagedContracts() external view returns (address[] memory) {\\n        return managedContracts;\\n    }\\n}\\n\",\"keccak256\":\"0x189559bcbe9ed1c26fb006c897d44aa227c033dbdedc32e0d6aa6dee3a307a30\",\"license\":\"BUSL-1.1\"},\"contracts/RoleAware.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Roles.sol\\\";\\n\\n/// Main characters are for service discovery\\n/// Whereas roles are for access control\\ncontract RoleAware {\\n    uint16 public constant WITHDRAWER = 1;\\n    uint16 public constant MARGIN_CALLER = 2;\\n    uint16 public constant BORROWER = 3;\\n    uint16 public constant MARGIN_TRADER = 4;\\n    uint16 public constant FEE_SOURCE = 5;\\n    uint16 public constant LIQUIDATOR = 6;\\n    uint16 public constant AUTHORIZED_FUND_TRADER = 7;\\n    uint16 public constant INCENTIVE_REPORTER = 8;\\n    uint16 public constant TOKEN_ACTIVATOR = 9;\\n    uint16 public constant STAKE_PENALIZER = 10;\\n\\n    uint16 public constant FUND = 101;\\n    uint16 public constant LENDING = 102;\\n    uint16 public constant ROUTER = 103;\\n    uint16 public constant MARGIN_TRADING = 104;\\n    uint16 public constant FEE_CONTROLLER = 105;\\n    uint16 public constant PRICE_CONTROLLER = 106;\\n    uint16 public constant ADMIN = 107;\\n    uint16 public constant INCENTIVE_DISTRIBUTION = 108;\\n    uint16 public constant TOKEN_ADMIN = 109;\\n\\n    Roles public roles;\\n    mapping(uint16 => address) public mainCharacterCache;\\n    mapping(address => mapping(uint16 => bool)) public roleCache;\\n\\n    constructor(address _roles) {\\n        roles = Roles(_roles);\\n    }\\n\\n    modifier noIntermediary() {\\n        require(\\n            msg.sender == tx.origin,\\n            \\\"Currently no intermediaries allowed for this function call\\\"\\n        );\\n        _;\\n    }\\n\\n    function updateRoleCache(uint16 role, address contr) public virtual {\\n        roleCache[contr][role] = roles.getRole(role, contr);\\n    }\\n\\n    function updateMainCharacterCache(uint16 role) public virtual {\\n        mainCharacterCache[role] = roles.mainCharacters(role);\\n    }\\n\\n    function fund() internal view returns (address) {\\n        return mainCharacterCache[FUND];\\n    }\\n\\n    function lending() internal view returns (address) {\\n        return mainCharacterCache[LENDING];\\n    }\\n\\n    function router() internal view returns (address) {\\n        return mainCharacterCache[ROUTER];\\n    }\\n\\n    function marginTrading() internal view returns (address) {\\n        return mainCharacterCache[MARGIN_TRADING];\\n    }\\n\\n    function feeController() internal view returns (address) {\\n        return mainCharacterCache[FEE_CONTROLLER];\\n    }\\n\\n    function price() internal view returns (address) {\\n        return mainCharacterCache[PRICE_CONTROLLER];\\n    }\\n\\n    function admin() internal view returns (address) {\\n        return mainCharacterCache[ADMIN];\\n    }\\n\\n    function incentiveDistributor() internal view returns (address) {\\n        return mainCharacterCache[INCENTIVE_DISTRIBUTION];\\n    }\\n\\n    function isBorrower(address contr) internal view returns (bool) {\\n        return roleCache[contr][BORROWER];\\n    }\\n\\n    function isWithdrawer(address contr) internal view returns (bool) {\\n        return roleCache[contr][WITHDRAWER];\\n    }\\n\\n    function isMarginTrader(address contr) internal view returns (bool) {\\n        return roleCache[contr][MARGIN_TRADER];\\n    }\\n\\n    function isFeeSource(address contr) internal view returns (bool) {\\n        return roleCache[contr][FEE_SOURCE];\\n    }\\n\\n    function isMarginCaller(address contr) internal view returns (bool) {\\n        return roleCache[contr][MARGIN_CALLER];\\n    }\\n\\n    function isLiquidator(address contr) internal view returns (bool) {\\n        return roleCache[contr][LIQUIDATOR];\\n    }\\n\\n    function isAuthorizedFundTrader(address contr)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return roleCache[contr][AUTHORIZED_FUND_TRADER];\\n    }\\n\\n    function isIncentiveReporter(address contr) internal view returns (bool) {\\n        return roleCache[contr][INCENTIVE_REPORTER];\\n    }\\n\\n    function isTokenActivator(address contr) internal view returns (bool) {\\n        return roleCache[contr][TOKEN_ACTIVATOR];\\n    }\\n\\n    function isStakePenalizer(address contr) internal view returns (bool) {\\n        return roles.getRole(STAKE_PENALIZER, contr);\\n    }\\n}\\n\",\"keccak256\":\"0xe46fbb4da8f5d2d4cb0e1025c64d57d187f3f35528bae87aad82a7a2c4f74496\",\"license\":\"BUSL-1.1\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Roles is Ownable {\\n    mapping(address => mapping(uint16 => bool)) public roles;\\n    mapping(uint16 => address) public mainCharacters;\\n\\n    constructor() Ownable() {\\n        // token activation from the get-go\\n        roles[msg.sender][9] = true;\\n    }\\n\\n    function giveRole(uint16 role, address actor) external onlyOwner {\\n        roles[actor][role] = true;\\n    }\\n\\n    function removeRole(uint16 role, address actor) external onlyOwner {\\n        roles[actor][role] = false;\\n    }\\n\\n    function setMainCharacter(uint16 role, address actor) external onlyOwner {\\n        mainCharacters[role] = actor;\\n    }\\n\\n    function getRole(uint16 role, address contr) external view returns (bool) {\\n        return roles[contr][role];\\n    }\\n}\\n\",\"keccak256\":\"0x7437a9ae57cabebc07d13141ac137ffbc5a3ed8c68f2f7f7685608a2bd6a6847\",\"license\":\"BUSL-1.1\"},\"interfaces/IDelegateOwner.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\ninterface IDelegateOwner {\\n    function relinquishOwnership(address property, address newOwner) external;\\n}\\n\",\"keccak256\":\"0x99901f8f707d14df505eb62d6a20ca017113dd5cda7ea079ae9e0c599a74d54f\",\"license\":\"BUSL-1.1\"},\"interfaces/IExecutor.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\ninterface IExecutor {\\n    function rightfulOwner() external returns (address);\\n\\n    function execute() external;\\n\\n    function requiredProperties() external view returns (address[] memory);\\n\\n    function requiredRoles() external returns (uint16[] memory);\\n}\\n\",\"keccak256\":\"0xb3bb593a2e3fbfb2041652eb41b703b2ba7140998912762e371c98c11922b002\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6080604052600980546001600160a01b03191690553480156200002157600080fd5b5060405162003332380380620033328339810160408190526200004491620000c2565b600080546001600160a01b0319166001600160a01b03831617815562000069620000be565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050620000f2565b3390565b600060208284031215620000d4578081fd5b81516001600160a01b0381168114620000eb578182fd5b9392505050565b61323080620001026000396000f3fe608060405234801561001057600080fd5b50600436106103205760003560e01c8063840c53bd116101a7578063b6aa083e116100ee578063d1efebfe11610097578063f1ce598e11610071578063f1ce598e1461059d578063f2fde38b146105b0578063fae371de146105c357610320565b8063d1efebfe1461057a578063d2e2372914610582578063d5d7ed7f1461059557610320565b8063c34316c3116100c8578063c34316c314610557578063c76139d01461056a578063cacf8d451461057257610320565b8063b6aa083e1461051e578063bb3a17c314610531578063bc2ed1891461054457610320565b8063a154ce8211610150578063a94c7c341161012a578063a94c7c34146104fb578063a9cc053614610503578063b44816521461050b57610320565b8063a154ce82146104c2578063a1fdc458146104d5578063a63fc163146104e857610320565b806392a427041161018157806392a427041461049f5780639b44225b146104a7578063a0098d69146104ba57610320565b8063840c53bd1461047157806385f84ea3146104845780638da5cb5b1461049757610320565b8063430ae4691161026b5780636a0e76c811610214578063715018a6116101ee578063715018a61461045957806381ca66001461046157806383a49c7c1461046957610320565b80636a0e76c81461042b5780636b60a09b1461043e5780636cd5cd601461044657610320565b80635bc92d74116102455780635bc92d74146104085780635c275a391461041b578063669419841461042357610320565b8063430ae469146103e557806346b88796146103f857806348fb27b81461040057610320565b80631bc5d81d116102cd5780632fe94def116102a75780632fe94def146103c057806332fe7b26146103c8578063392f5f64146103d057610320565b80631bc5d81d1461039d57806320e8d819146103a55780632a0acc6a146103b857610320565b80631135bb7b116102fe5780631135bb7b1461036d57806317b7b61b146103825780631b6695071461039557610320565b8063065d570f146103255780630ba46289146103435780631023d3e014610358575b600080fd5b61032d6105d6565b60405161033a9190613081565b60405180910390f35b61034b6105db565b60405161033a9190612e70565b610360610698565b60405161033a9190612e16565b61038061037b366004612ab4565b610707565b005b61032d610390366004612db6565b610838565b61032d610870565b61032d610875565b6103806103b3366004612d99565b61087a565b61032d61096c565b61032d610971565b61032d610976565b6103d861097b565b60405161033a9190612dce565b6103d86103f3366004612a7c565b610997565b61032d6109bf565b61032d6109c4565b610380610416366004612aec565b6109c9565b61032d610faf565b61032d610fb4565b61034b610439366004612a7c565b610fb9565b6103d8611161565b610380610454366004612d7d565b61117d565b61038061126c565b61032d61134e565b61032d611353565b61032d61047f366004612db6565b611358565b61034b610492366004612a7c565b611368565b6103d861147b565b61034b611497565b6103806104b5366004612d99565b611550565b61032d611637565b6103806104d0366004612a7c565b61163c565b6103806104e3366004612a7c565b611725565b6103806104f6366004612be1565b611fac565b61032d6120a2565b61032d6120a7565b6103d8610519366004612d7d565b6120ac565b61038061052c366004612d99565b6120d4565b61034b61053f366004612d7d565b61217e565b61034b610552366004612d7d565b612193565b61034b610565366004612c0e565b6121a8565b61032d6121c8565b61032d6121cd565b61032d6121d2565b61034b610590366004612a7c565b6121d7565b61032d6121ec565b6103d86105ab366004612db6565b6121f1565b6103806105be366004612a7c565b612228565b6103806105d1366004612d99565b612376565b600381565b600080546105fe9073ffffffffffffffffffffffffffffffffffffffff16610fb9565b905060005b60045481101561069457600060048281548110610649577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561067e575061067e81610fb9565b925050808061068c9061312d565b915050610603565b5090565b606060048054806020026020016040519081016040528092919081815260200182805480156106fd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106d2575b5050505050905090565b61070f612420565b73ffffffffffffffffffffffffffffffffffffffff1661072d61147b565b73ffffffffffffffffffffffffffffffffffffffff1614806107715750610752612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6107b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b60405180910390fd5b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063f2fde38b90610802908490600401612dce565b600060405180830381600087803b15801561081c57600080fd5b505af1158015610830573d6000803e3d6000fd5b505050505050565b600a818154811061084857600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600a81565b600881565b60005b60045481101561096757600481815481106108c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f20e8d81900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906320e8d819906109229086908690600401613090565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b50505050808061095f9061312d565b91505061087d565b505050565b606b81565b606981565b606781565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600681565b606681565b6109d1612420565b73ffffffffffffffffffffffffffffffffffffffff166109ef61147b565b73ffffffffffffffffffffffffffffffffffffffff161480610a335750610a14612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b610a69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b6004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790555b8084511115610b44576000848281518110610b1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610b318187612424565b5080610b3c8161312d565b915050610ad9565b5060005b8083511115610bb3576000838281518110610b8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610ba08187612562565b5080610bab8161312d565b915050610b48565b5060005b600a54811015610c9c578473ffffffffffffffffffffffffffffffffffffffff16636cd5cd60600a8381548110610c17577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b8152600401610c579190613081565b600060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b505050508080610c949061312d565b915050610bb7565b5060005b600b54811015610e1f5760005b600454811015610e0c578573ffffffffffffffffffffffffffffffffffffffff166320e8d819600b8481548110610d0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff1660048481548110610d6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610dc7929173ffffffffffffffffffffffffffffffffffffffff1690600401613090565b600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050508080610e049061312d565b915050610cad565b5080610e178161312d565b915050610ca0565b5060005b8082511115610fa857818181518110610e65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b866040518263ffffffff1660e01b8152600401610ea59190612dce565b600060405180830381600087803b158015610ebf57600080fd5b505af1158015610ed3573d6000803e3d6000fd5b505050508460076000848481518110610f15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610fa09061312d565b915050610e23565b5050505050565b606581565b600181565b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561100257600080fd5b505afa158015611016573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103a9190612a98565b905073ffffffffffffffffffffffffffffffffffffffff811630148061115a575073ffffffffffffffffffffffffffffffffffffffff808416600090815260076020526040902054828216911614801561115a575073ffffffffffffffffffffffffffffffffffffffff8381166000908152600760209081526040918290205482517f8da5cb5b000000000000000000000000000000000000000000000000000000008152925130949190911692638da5cb5b926004808301939192829003018186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111429190612a98565b73ffffffffffffffffffffffffffffffffffffffff16145b9392505050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60005b60045481101561126857600481815481106111c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f6cd5cd6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636cd5cd6090611223908590600401613081565b600060405180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b5050505080806112609061312d565b915050611180565b5050565b611274612420565b73ffffffffffffffffffffffffffffffffffffffff1661129261147b565b73ffffffffffffffffffffffffffffffffffffffff16146112df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612fef565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b606a81565b600981565b600b818154811061084857600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b157600080fd5b505afa1580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e99190612a98565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611441575061141261147b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b8061115a575073ffffffffffffffffffffffffffffffffffffffff9283166000908152600760205260409020548316921691909114919050565b60035473ffffffffffffffffffffffffffffffffffffffff1690565b600080546114ba9073ffffffffffffffffffffffffffffffffffffffff16610fb9565b905060005b60045481101561069457600060048281548110611505577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561153a575061153a81611368565b92505080806115489061312d565b9150506114bf565b611558612420565b73ffffffffffffffffffffffffffffffffffffffff1661157661147b565b73ffffffffffffffffffffffffffffffffffffffff1614806115ca57506008600061159f612420565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806115f757506115d8612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61162d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f92565b61126882826126a1565b600281565b611644612420565b73ffffffffffffffffffffffffffffffffffffffff1661166261147b565b73ffffffffffffffffffffffffffffffffffffffff1614806116b657506008600061168b612420565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806116e357506116c4612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f92565b611722816126f9565b50565b61172d612420565b73ffffffffffffffffffffffffffffffffffffffff1661174b61147b565b73ffffffffffffffffffffffffffffffffffffffff16148061178f5750611770612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6117c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b60008173ffffffffffffffffffffffffffffffffffffffff166316a45ab76040518163ffffffff1660e01b815260040160006040518083038186803b15801561180d57600080fd5b505afa158015611821573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526118679190810190612c3b565b905060005b8082511115611a235760008282815181106118b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80821660009081526007909352604090922054909250161561198b5773ffffffffffffffffffffffffffffffffffffffff808216600090815260076020526040908190205490517f1135bb7b000000000000000000000000000000000000000000000000000000008152911690631135bb7b906119549084908890600401612def565b600060405180830381600087803b15801561196e57600080fd5b505af1158015611982573d6000803e3d6000fd5b50505050611a10565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2fde38b906119dd908790600401612dce565b600060405180830381600087803b1580156119f757600080fd5b505af1158015611a0b573d6000803e3d6000fd5b505050505b5080611a1b8161312d565b91505061186c565b5060008273ffffffffffffffffffffffffffffffffffffffff1663cd28fc8f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a6e57600080fd5b505af1158015611a82573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611ac89190810190612cd4565b905060005b8082511115611b3257611b20828281518110611b12577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015185612562565b80611b2a8161312d565b915050611acd565b50600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155604080517f61461954000000000000000000000000000000000000000000000000000000008152905163614619549160048082019260009290919082900301818387803b158015611bc657600080fd5b505af1158015611bda573d6000803e3d6000fd5b5050600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555050604080517f4865cbc2000000000000000000000000000000000000000000000000000000008152905160009173ffffffffffffffffffffffffffffffffffffffff861691634865cbc29160048082019260209290919082900301818787803b158015611c7157600080fd5b505af1158015611c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca99190612a98565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611d015750611cd261147b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d37576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790613024565b60005b8084511115611f43576000848281518110611d7e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611de557600080fd5b505afa158015611df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1d9190612a98565b73ffffffffffffffffffffffffffffffffffffffff1614611e6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612e7b565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600760205260409020541615611f305773ffffffffffffffffffffffffffffffffffffffff808216600081815260076020526040908190205490517ff2fde38b000000000000000000000000000000000000000000000000000000008152919263f2fde38b92611efd9290911690600401612dce565b600060405180830381600087803b158015611f1757600080fd5b505af1158015611f2b573d6000803e3d6000fd5b505050505b5080611f3b8161312d565b915050611d3a565b5060005b8083511115610fa857611f9a838281518110611f8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151866126a1565b80611fa48161312d565b915050611f47565b611fb4612420565b73ffffffffffffffffffffffffffffffffffffffff16611fd261147b565b73ffffffffffffffffffffffffffffffffffffffff1614806120165750611ff7612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61204c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600581565b606881565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6120dc612420565b73ffffffffffffffffffffffffffffffffffffffff166120fa61147b565b73ffffffffffffffffffffffffffffffffffffffff16148061213e575061211f612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612174576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b6112688282612562565b60066020526000908152604090205460ff1681565b60056020526000908152604090205460ff1681565b600260209081526000928352604080842090915290825290205460ff1681565b606c81565b600481565b606d81565b60086020526000908152604090205460ff1681565b600781565b6004818154811061220157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b612230612420565b73ffffffffffffffffffffffffffffffffffffffff1661224e61147b565b73ffffffffffffffffffffffffffffffffffffffff161461229b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612fef565b73ffffffffffffffffffffffffffffffffffffffff81166122e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612ed8565b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61237e612420565b73ffffffffffffffffffffffffffffffffffffffff1661239c61147b565b73ffffffffffffffffffffffffffffffffffffffff1614806123e057506123c1612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612416576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b6112688282612424565b3390565b61ffff821660009081526005602052604090205460ff166124cf5761ffff808316600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600a80549182018155909152601081047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546002600f909316929092026101000a9283029290930219161790555b6000546040517ffae371de00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063fae371de906125279085908590600401613090565b600060405180830381600087803b15801561254157600080fd5b505af1158015612555573d6000803e3d6000fd5b505050506112688261117d565b61ffff821660009081526006602052604090205460ff1661260d5761ffff808316600081815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600b80549182018155909152601081047f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546002600f909316929092026101000a9283029290930219161790555b6000546040517fb6aa083e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b6aa083e906126659085908590600401613090565b600060405180830381600087803b15801561267f57600080fd5b505af1158015612693573d6000803e3d6000fd5b50505050611268828261087a565b6000546040517f9b44225b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b44225b906126659085908590600401613090565b60005b600b5481101561287457600054600b805473ffffffffffffffffffffffffffffffffffffffff9092169163d87fefd2919084908110612764577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16846040518363ffffffff1660e01b81526004016127a6929190613090565b60206040518083038186803b1580156127be57600080fd5b505afa1580156127d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f69190612d61565b1561286257612862600b8281548110612838577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16836126a1565b8061286c8161312d565b9150506126fc565b5060005b600a5481101561126857600054600a805473ffffffffffffffffffffffffffffffffffffffff808616931691633c9c8f9c91859081106128e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b81526004016129219190613081565b60206040518083038186803b15801561293957600080fd5b505afa15801561294d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129719190612a98565b73ffffffffffffffffffffffffffffffffffffffff1614156129f5576129f5600a82815481106129ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166000612424565b806129ff8161312d565b915050612878565b600082601f830112612a17578081fd5b81356020612a2c612a2783613109565b6130ba565b8281528181019085830183850287018401881015612a48578586fd5b855b85811015612a6f578135612a5d816131ea565b84529284019290840190600101612a4a565b5090979650505050505050565b600060208284031215612a8d578081fd5b813561115a816131ba565b600060208284031215612aa9578081fd5b815161115a816131ba565b60008060408385031215612ac6578081fd5b8235612ad1816131ba565b91506020830135612ae1816131ba565b809150509250929050565b60008060008060808587031215612b01578182fd5b8435612b0c816131ba565b935060208581013567ffffffffffffffff80821115612b29578485fd5b612b3589838a01612a07565b95506040880135915080821115612b4a578485fd5b612b5689838a01612a07565b94506060880135915080821115612b6b578384fd5b508601601f81018813612b7c578283fd5b8035612b8a612a2782613109565b81815283810190838501858402850186018c1015612ba6578687fd5b8694505b83851015612bd1578035612bbd816131ba565b835260019490940193918501918501612baa565b50979a9699509497505050505050565b60008060408385031215612bf3578182fd5b8235612bfe816131ba565b91506020830135612ae1816131dc565b60008060408385031215612c20578182fd5b8235612c2b816131ba565b91506020830135612ae1816131ea565b60006020808385031215612c4d578182fd5b825167ffffffffffffffff811115612c63578283fd5b8301601f81018513612c73578283fd5b8051612c81612a2782613109565b8181528381019083850185840285018601891015612c9d578687fd5b8694505b83851015612cc8578051612cb4816131ba565b835260019490940193918501918501612ca1565b50979650505050505050565b60006020808385031215612ce6578182fd5b825167ffffffffffffffff811115612cfc578283fd5b8301601f81018513612d0c578283fd5b8051612d1a612a2782613109565b8181528381019083850185840285018601891015612d36578687fd5b8694505b83851015612cc8578051612d4d816131ea565b835260019490940193918501918501612d3a565b600060208284031215612d72578081fd5b815161115a816131dc565b600060208284031215612d8e578081fd5b813561115a816131ea565b60008060408385031215612dab578182fd5b8235612ad1816131ea565b600060208284031215612dc7578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015612e6457835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612e32565b50909695505050505050565b901515815260200190565b60208082526021908201527f4578656375746f7220646964206e6f742072657475726e206f776e657273686960408201527f7000000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220657865637560408201527f746f720000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220617574686f60408201527f72697a65642064697361626c6572206f72206578656375746f72000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f4578656375746f7220646f65736e27742068617665207468652072696768742060408201527f726967687466756c206f776e6572000000000000000000000000000000000000606082015260800190565b61ffff91909116815260200190565b61ffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156131015761310161318b565b604052919050565b600067ffffffffffffffff8211156131235761312361318b565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613184577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461172257600080fd5b801515811461172257600080fd5b61ffff8116811461172257600080fdfea264697066735822122077abc26acfe58bba61ed9a3e6ad3dc6f7e34d759bd6e1ac4f463d0af14a4a6ec64736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103205760003560e01c8063840c53bd116101a7578063b6aa083e116100ee578063d1efebfe11610097578063f1ce598e11610071578063f1ce598e1461059d578063f2fde38b146105b0578063fae371de146105c357610320565b8063d1efebfe1461057a578063d2e2372914610582578063d5d7ed7f1461059557610320565b8063c34316c3116100c8578063c34316c314610557578063c76139d01461056a578063cacf8d451461057257610320565b8063b6aa083e1461051e578063bb3a17c314610531578063bc2ed1891461054457610320565b8063a154ce8211610150578063a94c7c341161012a578063a94c7c34146104fb578063a9cc053614610503578063b44816521461050b57610320565b8063a154ce82146104c2578063a1fdc458146104d5578063a63fc163146104e857610320565b806392a427041161018157806392a427041461049f5780639b44225b146104a7578063a0098d69146104ba57610320565b8063840c53bd1461047157806385f84ea3146104845780638da5cb5b1461049757610320565b8063430ae4691161026b5780636a0e76c811610214578063715018a6116101ee578063715018a61461045957806381ca66001461046157806383a49c7c1461046957610320565b80636a0e76c81461042b5780636b60a09b1461043e5780636cd5cd601461044657610320565b80635bc92d74116102455780635bc92d74146104085780635c275a391461041b578063669419841461042357610320565b8063430ae469146103e557806346b88796146103f857806348fb27b81461040057610320565b80631bc5d81d116102cd5780632fe94def116102a75780632fe94def146103c057806332fe7b26146103c8578063392f5f64146103d057610320565b80631bc5d81d1461039d57806320e8d819146103a55780632a0acc6a146103b857610320565b80631135bb7b116102fe5780631135bb7b1461036d57806317b7b61b146103825780631b6695071461039557610320565b8063065d570f146103255780630ba46289146103435780631023d3e014610358575b600080fd5b61032d6105d6565b60405161033a9190613081565b60405180910390f35b61034b6105db565b60405161033a9190612e70565b610360610698565b60405161033a9190612e16565b61038061037b366004612ab4565b610707565b005b61032d610390366004612db6565b610838565b61032d610870565b61032d610875565b6103806103b3366004612d99565b61087a565b61032d61096c565b61032d610971565b61032d610976565b6103d861097b565b60405161033a9190612dce565b6103d86103f3366004612a7c565b610997565b61032d6109bf565b61032d6109c4565b610380610416366004612aec565b6109c9565b61032d610faf565b61032d610fb4565b61034b610439366004612a7c565b610fb9565b6103d8611161565b610380610454366004612d7d565b61117d565b61038061126c565b61032d61134e565b61032d611353565b61032d61047f366004612db6565b611358565b61034b610492366004612a7c565b611368565b6103d861147b565b61034b611497565b6103806104b5366004612d99565b611550565b61032d611637565b6103806104d0366004612a7c565b61163c565b6103806104e3366004612a7c565b611725565b6103806104f6366004612be1565b611fac565b61032d6120a2565b61032d6120a7565b6103d8610519366004612d7d565b6120ac565b61038061052c366004612d99565b6120d4565b61034b61053f366004612d7d565b61217e565b61034b610552366004612d7d565b612193565b61034b610565366004612c0e565b6121a8565b61032d6121c8565b61032d6121cd565b61032d6121d2565b61034b610590366004612a7c565b6121d7565b61032d6121ec565b6103d86105ab366004612db6565b6121f1565b6103806105be366004612a7c565b612228565b6103806105d1366004612d99565b612376565b600381565b600080546105fe9073ffffffffffffffffffffffffffffffffffffffff16610fb9565b905060005b60045481101561069457600060048281548110610649577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561067e575061067e81610fb9565b925050808061068c9061312d565b915050610603565b5090565b606060048054806020026020016040519081016040528092919081815260200182805480156106fd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106d2575b5050505050905090565b61070f612420565b73ffffffffffffffffffffffffffffffffffffffff1661072d61147b565b73ffffffffffffffffffffffffffffffffffffffff1614806107715750610752612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6107b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b60405180910390fd5b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063f2fde38b90610802908490600401612dce565b600060405180830381600087803b15801561081c57600080fd5b505af1158015610830573d6000803e3d6000fd5b505050505050565b600a818154811061084857600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600a81565b600881565b60005b60045481101561096757600481815481106108c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f20e8d81900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906320e8d819906109229086908690600401613090565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b50505050808061095f9061312d565b91505061087d565b505050565b606b81565b606981565b606781565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600681565b606681565b6109d1612420565b73ffffffffffffffffffffffffffffffffffffffff166109ef61147b565b73ffffffffffffffffffffffffffffffffffffffff161480610a335750610a14612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b610a69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b6004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790555b8084511115610b44576000848281518110610b1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610b318187612424565b5080610b3c8161312d565b915050610ad9565b5060005b8083511115610bb3576000838281518110610b8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610ba08187612562565b5080610bab8161312d565b915050610b48565b5060005b600a54811015610c9c578473ffffffffffffffffffffffffffffffffffffffff16636cd5cd60600a8381548110610c17577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b8152600401610c579190613081565b600060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b505050508080610c949061312d565b915050610bb7565b5060005b600b54811015610e1f5760005b600454811015610e0c578573ffffffffffffffffffffffffffffffffffffffff166320e8d819600b8481548110610d0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff1660048481548110610d6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610dc7929173ffffffffffffffffffffffffffffffffffffffff1690600401613090565b600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050508080610e049061312d565b915050610cad565b5080610e178161312d565b915050610ca0565b5060005b8082511115610fa857818181518110610e65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b866040518263ffffffff1660e01b8152600401610ea59190612dce565b600060405180830381600087803b158015610ebf57600080fd5b505af1158015610ed3573d6000803e3d6000fd5b505050508460076000848481518110610f15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610fa09061312d565b915050610e23565b5050505050565b606581565b600181565b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561100257600080fd5b505afa158015611016573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103a9190612a98565b905073ffffffffffffffffffffffffffffffffffffffff811630148061115a575073ffffffffffffffffffffffffffffffffffffffff808416600090815260076020526040902054828216911614801561115a575073ffffffffffffffffffffffffffffffffffffffff8381166000908152600760209081526040918290205482517f8da5cb5b000000000000000000000000000000000000000000000000000000008152925130949190911692638da5cb5b926004808301939192829003018186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111429190612a98565b73ffffffffffffffffffffffffffffffffffffffff16145b9392505050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60005b60045481101561126857600481815481106111c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f6cd5cd6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636cd5cd6090611223908590600401613081565b600060405180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b5050505080806112609061312d565b915050611180565b5050565b611274612420565b73ffffffffffffffffffffffffffffffffffffffff1661129261147b565b73ffffffffffffffffffffffffffffffffffffffff16146112df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612fef565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b606a81565b600981565b600b818154811061084857600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b157600080fd5b505afa1580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e99190612a98565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611441575061141261147b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b8061115a575073ffffffffffffffffffffffffffffffffffffffff9283166000908152600760205260409020548316921691909114919050565b60035473ffffffffffffffffffffffffffffffffffffffff1690565b600080546114ba9073ffffffffffffffffffffffffffffffffffffffff16610fb9565b905060005b60045481101561069457600060048281548110611505577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561153a575061153a81611368565b92505080806115489061312d565b9150506114bf565b611558612420565b73ffffffffffffffffffffffffffffffffffffffff1661157661147b565b73ffffffffffffffffffffffffffffffffffffffff1614806115ca57506008600061159f612420565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806115f757506115d8612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61162d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f92565b61126882826126a1565b600281565b611644612420565b73ffffffffffffffffffffffffffffffffffffffff1661166261147b565b73ffffffffffffffffffffffffffffffffffffffff1614806116b657506008600061168b612420565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806116e357506116c4612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f92565b611722816126f9565b50565b61172d612420565b73ffffffffffffffffffffffffffffffffffffffff1661174b61147b565b73ffffffffffffffffffffffffffffffffffffffff16148061178f5750611770612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6117c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b60008173ffffffffffffffffffffffffffffffffffffffff166316a45ab76040518163ffffffff1660e01b815260040160006040518083038186803b15801561180d57600080fd5b505afa158015611821573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526118679190810190612c3b565b905060005b8082511115611a235760008282815181106118b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80821660009081526007909352604090922054909250161561198b5773ffffffffffffffffffffffffffffffffffffffff808216600090815260076020526040908190205490517f1135bb7b000000000000000000000000000000000000000000000000000000008152911690631135bb7b906119549084908890600401612def565b600060405180830381600087803b15801561196e57600080fd5b505af1158015611982573d6000803e3d6000fd5b50505050611a10565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2fde38b906119dd908790600401612dce565b600060405180830381600087803b1580156119f757600080fd5b505af1158015611a0b573d6000803e3d6000fd5b505050505b5080611a1b8161312d565b91505061186c565b5060008273ffffffffffffffffffffffffffffffffffffffff1663cd28fc8f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a6e57600080fd5b505af1158015611a82573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611ac89190810190612cd4565b905060005b8082511115611b3257611b20828281518110611b12577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015185612562565b80611b2a8161312d565b915050611acd565b50600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155604080517f61461954000000000000000000000000000000000000000000000000000000008152905163614619549160048082019260009290919082900301818387803b158015611bc657600080fd5b505af1158015611bda573d6000803e3d6000fd5b5050600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555050604080517f4865cbc2000000000000000000000000000000000000000000000000000000008152905160009173ffffffffffffffffffffffffffffffffffffffff861691634865cbc29160048082019260209290919082900301818787803b158015611c7157600080fd5b505af1158015611c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca99190612a98565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611d015750611cd261147b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d37576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790613024565b60005b8084511115611f43576000848281518110611d7e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611de557600080fd5b505afa158015611df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1d9190612a98565b73ffffffffffffffffffffffffffffffffffffffff1614611e6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612e7b565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600760205260409020541615611f305773ffffffffffffffffffffffffffffffffffffffff808216600081815260076020526040908190205490517ff2fde38b000000000000000000000000000000000000000000000000000000008152919263f2fde38b92611efd9290911690600401612dce565b600060405180830381600087803b158015611f1757600080fd5b505af1158015611f2b573d6000803e3d6000fd5b505050505b5080611f3b8161312d565b915050611d3a565b5060005b8083511115610fa857611f9a838281518110611f8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151866126a1565b80611fa48161312d565b915050611f47565b611fb4612420565b73ffffffffffffffffffffffffffffffffffffffff16611fd261147b565b73ffffffffffffffffffffffffffffffffffffffff1614806120165750611ff7612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61204c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600581565b606881565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6120dc612420565b73ffffffffffffffffffffffffffffffffffffffff166120fa61147b565b73ffffffffffffffffffffffffffffffffffffffff16148061213e575061211f612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612174576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b6112688282612562565b60066020526000908152604090205460ff1681565b60056020526000908152604090205460ff1681565b600260209081526000928352604080842090915290825290205460ff1681565b606c81565b600481565b606d81565b60086020526000908152604090205460ff1681565b600781565b6004818154811061220157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b612230612420565b73ffffffffffffffffffffffffffffffffffffffff1661224e61147b565b73ffffffffffffffffffffffffffffffffffffffff161461229b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612fef565b73ffffffffffffffffffffffffffffffffffffffff81166122e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612ed8565b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61237e612420565b73ffffffffffffffffffffffffffffffffffffffff1661239c61147b565b73ffffffffffffffffffffffffffffffffffffffff1614806123e057506123c1612420565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612416576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a790612f35565b6112688282612424565b3390565b61ffff821660009081526005602052604090205460ff166124cf5761ffff808316600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600a80549182018155909152601081047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546002600f909316929092026101000a9283029290930219161790555b6000546040517ffae371de00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063fae371de906125279085908590600401613090565b600060405180830381600087803b15801561254157600080fd5b505af1158015612555573d6000803e3d6000fd5b505050506112688261117d565b61ffff821660009081526006602052604090205460ff1661260d5761ffff808316600081815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600b80549182018155909152601081047f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546002600f909316929092026101000a9283029290930219161790555b6000546040517fb6aa083e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b6aa083e906126659085908590600401613090565b600060405180830381600087803b15801561267f57600080fd5b505af1158015612693573d6000803e3d6000fd5b50505050611268828261087a565b6000546040517f9b44225b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b44225b906126659085908590600401613090565b60005b600b5481101561287457600054600b805473ffffffffffffffffffffffffffffffffffffffff9092169163d87fefd2919084908110612764577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16846040518363ffffffff1660e01b81526004016127a6929190613090565b60206040518083038186803b1580156127be57600080fd5b505afa1580156127d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f69190612d61565b1561286257612862600b8281548110612838577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16836126a1565b8061286c8161312d565b9150506126fc565b5060005b600a5481101561126857600054600a805473ffffffffffffffffffffffffffffffffffffffff808616931691633c9c8f9c91859081106128e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b81526004016129219190613081565b60206040518083038186803b15801561293957600080fd5b505afa15801561294d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129719190612a98565b73ffffffffffffffffffffffffffffffffffffffff1614156129f5576129f5600a82815481106129ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166000612424565b806129ff8161312d565b915050612878565b600082601f830112612a17578081fd5b81356020612a2c612a2783613109565b6130ba565b8281528181019085830183850287018401881015612a48578586fd5b855b85811015612a6f578135612a5d816131ea565b84529284019290840190600101612a4a565b5090979650505050505050565b600060208284031215612a8d578081fd5b813561115a816131ba565b600060208284031215612aa9578081fd5b815161115a816131ba565b60008060408385031215612ac6578081fd5b8235612ad1816131ba565b91506020830135612ae1816131ba565b809150509250929050565b60008060008060808587031215612b01578182fd5b8435612b0c816131ba565b935060208581013567ffffffffffffffff80821115612b29578485fd5b612b3589838a01612a07565b95506040880135915080821115612b4a578485fd5b612b5689838a01612a07565b94506060880135915080821115612b6b578384fd5b508601601f81018813612b7c578283fd5b8035612b8a612a2782613109565b81815283810190838501858402850186018c1015612ba6578687fd5b8694505b83851015612bd1578035612bbd816131ba565b835260019490940193918501918501612baa565b50979a9699509497505050505050565b60008060408385031215612bf3578182fd5b8235612bfe816131ba565b91506020830135612ae1816131dc565b60008060408385031215612c20578182fd5b8235612c2b816131ba565b91506020830135612ae1816131ea565b60006020808385031215612c4d578182fd5b825167ffffffffffffffff811115612c63578283fd5b8301601f81018513612c73578283fd5b8051612c81612a2782613109565b8181528381019083850185840285018601891015612c9d578687fd5b8694505b83851015612cc8578051612cb4816131ba565b835260019490940193918501918501612ca1565b50979650505050505050565b60006020808385031215612ce6578182fd5b825167ffffffffffffffff811115612cfc578283fd5b8301601f81018513612d0c578283fd5b8051612d1a612a2782613109565b8181528381019083850185840285018601891015612d36578687fd5b8694505b83851015612cc8578051612d4d816131ea565b835260019490940193918501918501612d3a565b600060208284031215612d72578081fd5b815161115a816131dc565b600060208284031215612d8e578081fd5b813561115a816131ea565b60008060408385031215612dab578182fd5b8235612ad1816131ea565b600060208284031215612dc7578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015612e6457835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612e32565b50909695505050505050565b901515815260200190565b60208082526021908201527f4578656375746f7220646964206e6f742072657475726e206f776e657273686960408201527f7000000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220657865637560408201527f746f720000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220617574686f60408201527f72697a65642064697361626c6572206f72206578656375746f72000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f4578656375746f7220646f65736e27742068617665207468652072696768742060408201527f726967687466756c206f776e6572000000000000000000000000000000000000606082015260800190565b61ffff91909116815260200190565b61ffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156131015761310161318b565b604052919050565b600067ffffffffffffffff8211156131235761312361318b565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613184577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461172257600080fd5b801515811461172257600080fd5b61ffff8116811461172257600080fdfea264697066735822122077abc26acfe58bba61ed9a3e6ad3dc6f7e34d759bd6e1ac4f463d0af14a4a6ec64736f6c63430008010033",
  "devdoc": {
    "details": "Provides a single point of reference to verify ownership integrity within our system as well as performing cache invalidation for roles and inter-contract relationships",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11730,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Roles)12120"
      },
      {
        "astId": 11734,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "mainCharacterCache",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_address)"
      },
      {
        "astId": 11740,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "roleCache",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_bool))"
      },
      {
        "astId": 381,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6939,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "managedContracts",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6943,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "knownCharacters",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint16,t_bool)"
      },
      {
        "astId": 6947,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "knownRoles",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint16,t_bool)"
      },
      {
        "astId": 6951,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "delegateOwner",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6955,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "disabler",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6961,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "currentExecutor",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 6964,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "allCharacters",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint16)dyn_storage"
      },
      {
        "astId": 6967,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "allRoles",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_uint16)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint16)dyn_storage": {
        "base": "t_uint16",
        "encoding": "dynamic_array",
        "label": "uint16[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Roles)12120": {
        "encoding": "inplace",
        "label": "contract Roles",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_bool)"
      },
      "t_mapping(t_uint16,t_address)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint16,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      }
    }
  }
}
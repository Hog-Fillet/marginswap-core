{
  "address": "0xb8a63dBb2C5B775067444EaEF60722806524F7FD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_roles",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AUTHORIZED_FUND_TRADER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BORROWER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_CONTROLLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_SOURCE",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUND",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INCENTIVE_DISTRIBUTION",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INCENTIVE_REPORTER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LENDING",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATOR",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_CALLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_TRADER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARGIN_TRADING",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_CONTROLLER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKE_PENALIZER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN_ACTIVATOR",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWER",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allCharacters",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allManagedContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allRoles",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentExecutor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegateOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "disabler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        }
      ],
      "name": "executeAsOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "giveRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "knownCharacters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "knownRoles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "mainCharacterCache",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        },
        {
          "internalType": "uint16[]",
          "name": "charactersPlayed",
          "type": "uint16[]"
        },
        {
          "internalType": "uint16[]",
          "name": "rolesPlayed",
          "type": "uint16[]"
        },
        {
          "internalType": "address[]",
          "name": "ownsAsDelegate",
          "type": "address[]"
        }
      ],
      "name": "manageContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "managedContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "ownsContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "ownsContractStrict",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownableContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "relinquishOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "removeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "roleCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roles",
      "outputs": [
        {
          "internalType": "contract Roles",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "disablerAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "setDisabler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "setMainCharacter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "character",
          "type": "uint16"
        }
      ],
      "name": "updateMainCharacterCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "contr",
          "type": "address"
        }
      ],
      "name": "updateRoleCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyOwnership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ownsAll",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyOwnershipStrict",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ownsAll",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2de2e9d4dc61d374fa8190b2c2087726849fde4ea68fb55d6071d30e70e4af6f",
  "receipt": {
    "to": null,
    "from": "0x23292e9BA8434e59E6BAC1907bA7425211c4DE27",
    "contractAddress": "0xb8a63dBb2C5B775067444EaEF60722806524F7FD",
    "transactionIndex": 2,
    "gasUsed": "2853914",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000100000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000008000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000020000000000000000000000000000000000000000000040000000000000000000000",
    "blockHash": "0x2795b6bbc088789bf14c597fac7ec2ec37faadca97722d7b3fc3d2e7d4a4bdf0",
    "transactionHash": "0x2de2e9d4dc61d374fa8190b2c2087726849fde4ea68fb55d6071d30e70e4af6f",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 23978944,
        "transactionHash": "0x2de2e9d4dc61d374fa8190b2c2087726849fde4ea68fb55d6071d30e70e4af6f",
        "address": "0xb8a63dBb2C5B775067444EaEF60722806524F7FD",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000023292e9ba8434e59e6bac1907ba7425211c4de27"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x2795b6bbc088789bf14c597fac7ec2ec37faadca97722d7b3fc3d2e7d4a4bdf0"
      }
    ],
    "blockNumber": 23978944,
    "cumulativeGasUsed": "2990671",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0aB4A3F2B1129A0595185e4a9A1548e9e7f984C0"
  ],
  "solcInputHash": "fe4ccaec56ebcbda1a00f5460db20335",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_roles\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AUTHORIZED_FUND_TRADER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BORROWER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_CONTROLLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_SOURCE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FUND\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INCENTIVE_DISTRIBUTION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INCENTIVE_REPORTER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDING\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_CALLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_TRADER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARGIN_TRADING\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_CONTROLLER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKE_PENALIZER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_ACTIVATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWER\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allCharacters\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allManagedContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRoles\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegateOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disabler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"executeAsOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"giveRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"knownCharacters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"knownRoles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"mainCharacterCache\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"},{\"internalType\":\"uint16[]\",\"name\":\"charactersPlayed\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16[]\",\"name\":\"rolesPlayed\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"ownsAsDelegate\",\"type\":\"address[]\"}],\"name\":\"manageContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"managedContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"ownsContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"ownsContractStrict\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownableContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"relinquishOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"roleCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"contract Roles\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disablerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setDisabler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"setMainCharacter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"character\",\"type\":\"uint16\"}],\"name\":\"updateMainCharacterCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"role\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"contr\",\"type\":\"address\"}],\"name\":\"updateRoleCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ownsAll\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyOwnershipStrict\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ownsAll\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides a single point of reference to verify ownership integrity within our system as well as performing cache invalidation for roles and inter-contract relationships\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DependencyController.sol\":\"DependencyController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/DependencyController.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"./RoleAware.sol\\\";\\nimport \\\"../interfaces/IExecutor.sol\\\";\\nimport \\\"../interfaces/IDelegateOwner.sol\\\";\\n\\n/// @dev Provides a single point of reference to verify ownership integrity\\n/// within our system as well as performing cache invalidation for\\n/// roles and inter-contract relationships\\ncontract DependencyController is RoleAware, Ownable, IDelegateOwner {\\n    constructor(address _roles) RoleAware(_roles) Ownable() {}\\n\\n    address[] public managedContracts;\\n    mapping(uint16 => bool) public knownCharacters;\\n    mapping(uint16 => bool) public knownRoles;\\n    mapping(address => address) public delegateOwner;\\n    mapping(address => bool) public disabler;\\n    address public currentExecutor = address(0);\\n\\n    uint16[] public allCharacters;\\n    uint16[] public allRoles;\\n\\n    modifier onlyOwnerOrExecOrDisabler() {\\n        require(\\n            owner() == _msgSender() ||\\n                disabler[_msgSender()] ||\\n                currentExecutor == _msgSender(),\\n            \\\"Caller is not the owner or authorized disabler or executor\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyOwnerOrExec() {\\n        require(\\n            owner() == _msgSender() || currentExecutor == _msgSender(),\\n            \\\"Caller is not the owner or executor\\\"\\n        );\\n        _;\\n    }\\n\\n    function verifyOwnership() external view returns (bool ownsAll) {\\n        ownsAll = ownsContractStrict(address(roles));\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            address contr = managedContracts[i];\\n            ownsAll = ownsAll && ownsContract(contr);\\n        }\\n    }\\n\\n    function verifyOwnershipStrict() external view returns (bool ownsAll) {\\n        ownsAll = ownsContractStrict(address(roles));\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            address contr = managedContracts[i];\\n            ownsAll = ownsAll && ownsContractStrict(contr);\\n        }\\n    }\\n\\n    function ownsContract(address contr) public view returns (bool) {\\n        address contrOwner = Ownable(contr).owner();\\n        return\\n            contrOwner == address(this) ||\\n            contrOwner == owner() ||\\n            contrOwner == delegateOwner[contr];\\n    }\\n\\n    function ownsContractStrict(address contr) public view returns (bool) {\\n        address contrOwner = Ownable(contr).owner();\\n        return\\n            contrOwner == address(this) ||\\n            (contrOwner == delegateOwner[contr] &&\\n                Ownable(delegateOwner[contr]).owner() == address(this));\\n    }\\n\\n    function relinquishOwnership(address ownableContract, address newOwner)\\n        external\\n        override\\n        onlyOwnerOrExec\\n    {\\n        Ownable(ownableContract).transferOwnership(newOwner);\\n    }\\n\\n    function setDisabler(address disablerAddress, bool authorized)\\n        external\\n        onlyOwnerOrExec\\n    {\\n        disabler[disablerAddress] = authorized;\\n    }\\n\\n    function executeAsOwner(address executor) external onlyOwnerOrExec {\\n        address[] memory properties = IExecutor(executor).requiredProperties();\\n        for (uint256 i = 0; properties.length > i; i++) {\\n            address property = properties[i];\\n            if (delegateOwner[property] != address(0)) {\\n                IDelegateOwner(delegateOwner[property]).relinquishOwnership(\\n                    property,\\n                    executor\\n                );\\n            } else {\\n                Ownable(property).transferOwnership(executor);\\n            }\\n        }\\n\\n        uint16[] memory requiredRoles = IExecutor(executor).requiredRoles();\\n\\n        for (uint256 i = 0; requiredRoles.length > i; i++) {\\n            _giveRole(requiredRoles[i], executor);\\n        }\\n\\n        currentExecutor = executor;\\n        IExecutor(executor).execute();\\n        currentExecutor = address(0);\\n\\n        address rightfulOwner = IExecutor(executor).rightfulOwner();\\n        require(\\n            rightfulOwner == address(this) || rightfulOwner == owner(),\\n            \\\"Executor doesn't have the right rightful owner\\\"\\n        );\\n\\n        for (uint256 i = 0; properties.length > i; i++) {\\n            address property = properties[i];\\n            require(\\n                Ownable(property).owner() == rightfulOwner,\\n                \\\"Executor did not return ownership\\\"\\n            );\\n            if (delegateOwner[property] != address(0)) {\\n                Ownable(property).transferOwnership(delegateOwner[property]);\\n            }\\n        }\\n\\n        for (uint256 i = 0; requiredRoles.length > i; i++) {\\n            _removeRole(requiredRoles[i], executor);\\n        }\\n    }\\n\\n    function manageContract(\\n        address contr,\\n        uint16[] memory charactersPlayed,\\n        uint16[] memory rolesPlayed,\\n        address[] memory ownsAsDelegate\\n    ) external onlyOwnerOrExec {\\n        managedContracts.push(contr);\\n\\n        // set up all characters this contract plays\\n        for (uint256 i = 0; charactersPlayed.length > i; i++) {\\n            uint16 character = charactersPlayed[i];\\n            _setMainCharacter(character, contr);\\n        }\\n\\n        // all roles this contract plays\\n        for (uint256 i = 0; rolesPlayed.length > i; i++) {\\n            uint16 role = rolesPlayed[i];\\n            _giveRole(role, contr);\\n        }\\n\\n        // update this contract with all characters we know about\\n        for (uint256 i = 0; allCharacters.length > i; i++) {\\n            RoleAware(contr).updateMainCharacterCache(allCharacters[i]);\\n        }\\n\\n        // update this contract with all roles for all contracts we know about\\n        for (uint256 i = 0; allRoles.length > i; i++) {\\n            for (uint256 j = 0; managedContracts.length > j; j++) {\\n                RoleAware(contr).updateRoleCache(\\n                    allRoles[i],\\n                    managedContracts[j]\\n                );\\n            }\\n        }\\n\\n        for (uint256 i = 0; ownsAsDelegate.length > i; i++) {\\n            Ownable(ownsAsDelegate[i]).transferOwnership(contr);\\n            delegateOwner[ownsAsDelegate[i]] = contr;\\n        }\\n    }\\n\\n    function disableContract(address contr) external onlyOwnerOrExecOrDisabler {\\n        _disableContract(contr);\\n    }\\n\\n    function _disableContract(address contr) internal {\\n        for (uint256 i = 0; allRoles.length > i; i++) {\\n            if (roles.getRole(allRoles[i], contr)) {\\n                _removeRole(allRoles[i], contr);\\n            }\\n        }\\n\\n        for (uint256 i = 0; allCharacters.length > i; i++) {\\n            if (roles.mainCharacters(allCharacters[i]) == contr) {\\n                _setMainCharacter(allCharacters[i], address(0));\\n            }\\n        }\\n    }\\n\\n    function giveRole(uint16 role, address actor) external onlyOwnerOrExec {\\n        _giveRole(role, actor);\\n    }\\n\\n    function removeRole(uint16 role, address actor)\\n        external\\n        onlyOwnerOrExecOrDisabler\\n    {\\n        _removeRole(role, actor);\\n    }\\n\\n    function _removeRole(uint16 role, address actor) internal {\\n        roles.removeRole(role, actor);\\n        updateRoleCache(role, actor);\\n    }\\n\\n    function setMainCharacter(uint16 role, address actor)\\n        external\\n        onlyOwnerOrExec\\n    {\\n        _setMainCharacter(role, actor);\\n    }\\n\\n    function _giveRole(uint16 role, address actor) internal {\\n        if (!knownRoles[role]) {\\n            knownRoles[role] = true;\\n            allRoles.push(role);\\n        }\\n        roles.giveRole(role, actor);\\n        updateRoleCache(role, actor);\\n    }\\n\\n    function _setMainCharacter(uint16 character, address actor) internal {\\n        if (!knownCharacters[character]) {\\n            knownCharacters[character] = true;\\n            allCharacters.push(character);\\n        }\\n        roles.setMainCharacter(character, actor);\\n        updateMainCharacterCache(character);\\n    }\\n\\n    function updateMainCharacterCache(uint16 character) public override {\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            RoleAware(managedContracts[i]).updateMainCharacterCache(character);\\n        }\\n    }\\n\\n    function updateRoleCache(uint16 role, address contr) public override {\\n        for (uint256 i = 0; managedContracts.length > i; i++) {\\n            RoleAware(managedContracts[i]).updateRoleCache(role, contr);\\n        }\\n    }\\n\\n    function allManagedContracts() external view  returns (address[] memory) {\\n        return managedContracts;\\n    }\\n}\",\"keccak256\":\"0xaea1efd751cf103f1c2117c8cacb5988df0ca6e8907f09141820f8773feab0a0\",\"license\":\"GPL-2.0-only\"},\"contracts/RoleAware.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Roles.sol\\\";\\n\\n/// Main characters are for service discovery\\n/// Whereas roles are for access control\\ncontract RoleAware {\\n    uint16 public constant WITHDRAWER = 1;\\n    uint16 public constant MARGIN_CALLER = 2;\\n    uint16 public constant BORROWER = 3;\\n    uint16 public constant MARGIN_TRADER = 4;\\n    uint16 public constant FEE_SOURCE = 5;\\n    uint16 public constant LIQUIDATOR = 6;\\n    uint16 public constant AUTHORIZED_FUND_TRADER = 7;\\n    uint16 public constant INCENTIVE_REPORTER = 8;\\n    uint16 public constant TOKEN_ACTIVATOR = 9;\\n    uint16 public constant STAKE_PENALIZER = 10;\\n\\n    uint16 public constant FUND = 101;\\n    uint16 public constant LENDING = 102;\\n    uint16 public constant ROUTER = 103;\\n    uint16 public constant MARGIN_TRADING = 104;\\n    uint16 public constant FEE_CONTROLLER = 105;\\n    uint16 public constant PRICE_CONTROLLER = 106;\\n    uint16 public constant ADMIN = 107;\\n    uint16 public constant INCENTIVE_DISTRIBUTION = 108;\\n\\n    Roles public roles;\\n    mapping(uint16 => address) public mainCharacterCache;\\n    mapping(address => mapping(uint16 => bool)) public roleCache;\\n\\n    constructor(address _roles) {\\n        roles = Roles(_roles);\\n    }\\n\\n    modifier noIntermediary() {\\n        require(\\n            msg.sender == tx.origin,\\n            \\\"Currently no intermediaries allowed for this function call\\\"\\n        );\\n        _;\\n    }\\n\\n    function updateRoleCache(uint16 role, address contr) public virtual {\\n        roleCache[contr][role] = roles.getRole(role, contr);\\n    }\\n\\n    function updateMainCharacterCache(uint16 role) public virtual {\\n        mainCharacterCache[role] = roles.mainCharacters(role);\\n    }\\n\\n    function fund() internal view returns (address) {\\n        return mainCharacterCache[FUND];\\n    }\\n\\n    function lending() internal view returns (address) {\\n        return mainCharacterCache[LENDING];\\n    }\\n\\n    function router() internal view returns (address) {\\n        return mainCharacterCache[ROUTER];\\n    }\\n\\n    function marginTrading() internal view returns (address) {\\n        return mainCharacterCache[MARGIN_TRADING];\\n    }\\n\\n    function feeController() internal view returns (address) {\\n        return mainCharacterCache[FEE_CONTROLLER];\\n    }\\n\\n    function price() internal view returns (address) {\\n        return mainCharacterCache[PRICE_CONTROLLER];\\n    }\\n\\n    function admin() internal view returns (address) {\\n        return mainCharacterCache[ADMIN];\\n    }\\n\\n    function incentiveDistributor() internal view returns (address) {\\n        return mainCharacterCache[INCENTIVE_DISTRIBUTION];\\n    }\\n\\n    function isBorrower(address contr) internal view returns (bool) {\\n        return roleCache[contr][BORROWER];\\n    }\\n\\n    function isWithdrawer(address contr) internal view returns (bool) {\\n        return roleCache[contr][WITHDRAWER];\\n    }\\n\\n    function isMarginTrader(address contr) internal view returns (bool) {\\n        return roleCache[contr][MARGIN_TRADER];\\n    }\\n\\n    function isFeeSource(address contr) internal view returns (bool) {\\n        return roleCache[contr][FEE_SOURCE];\\n    }\\n\\n    function isMarginCaller(address contr) internal view returns (bool) {\\n        return roleCache[contr][MARGIN_CALLER];\\n    }\\n\\n    function isLiquidator(address contr) internal view returns (bool) {\\n        return roleCache[contr][LIQUIDATOR];\\n    }\\n\\n    function isAuthorizedFundTrader(address contr)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return roleCache[contr][AUTHORIZED_FUND_TRADER];\\n    }\\n\\n    function isIncentiveReporter(address contr) internal view returns (bool) {\\n        return roleCache[contr][INCENTIVE_REPORTER];\\n    }\\n\\n    function isTokenActivator(address contr) internal view returns (bool) {\\n        return roleCache[contr][TOKEN_ACTIVATOR];\\n    }\\n\\n    function isStakePenalizer(address contr) internal view returns (bool) {\\n        return roles.getRole(STAKE_PENALIZER, contr);\\n    }\\n}\\n\",\"keccak256\":\"0x779699aa9143f47f47fa1a42f1dcf168188654d923c76667edf723489bdbfbc6\",\"license\":\"GPL-2.0-only\"},\"contracts/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Roles is Ownable {\\n    mapping(address => mapping(uint16 => bool)) public roles;\\n    mapping(uint16 => address) public mainCharacters;\\n\\n    constructor() Ownable() {\\n        // token activation from the get-go\\n        roles[msg.sender][9] = true;\\n    }\\n\\n    function giveRole(uint16 role, address actor) external onlyOwner {\\n        roles[actor][role] = true;\\n    }\\n\\n    function removeRole(uint16 role, address actor) external onlyOwner {\\n        roles[actor][role] = false;\\n    }\\n\\n    function setMainCharacter(uint16 role, address actor) external onlyOwner {\\n        mainCharacters[role] = actor;\\n    }\\n\\n    function getRole(uint16 role, address contr) external view returns (bool) {\\n        return roles[contr][role];\\n    }\\n}\\n\",\"keccak256\":\"0x7437a9ae57cabebc07d13141ac137ffbc5a3ed8c68f2f7f7685608a2bd6a6847\",\"license\":\"GPL-2.0-only\"},\"interfaces/IDelegateOwner.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\ninterface IDelegateOwner {\\n    function relinquishOwnership(address property, address newOwner) external;\\n}\\n\",\"keccak256\":\"0x99901f8f707d14df505eb62d6a20ca017113dd5cda7ea079ae9e0c599a74d54f\",\"license\":\"GPL-2.0-only\"},\"interfaces/IExecutor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-only\\npragma solidity ^0.8.0;\\n\\ninterface IExecutor {\\n    function rightfulOwner() external returns (address);\\n\\n    function execute() external;\\n\\n    function requiredProperties() external returns (address[] memory);\\n\\n    function requiredRoles() external returns (uint16[] memory);\\n}\\n\",\"keccak256\":\"0x2fb86208eee5ed17cffadb24ca4575002e205a2e14e34112804f1a7af0e2f2b4\",\"license\":\"GPL-2.0-only\"}},\"version\":1}",
  "bytecode": "0x6080604052600980546001600160a01b03191690553480156200002157600080fd5b506040516200331c3803806200331c8339810160408190526200004491620000c2565b600080546001600160a01b0319166001600160a01b03831617815562000069620000be565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050620000f2565b3390565b600060208284031215620000d4578081fd5b81516001600160a01b0381168114620000eb578182fd5b9392505050565b61321a80620001026000396000f3fe608060405234801561001057600080fd5b50600436106103155760003560e01c806383a49c7c116101a7578063b4481652116100ee578063cacf8d4511610097578063f1ce598e11610071578063f1ce598e1461058a578063f2fde38b1461059d578063fae371de146105b057610315565b8063cacf8d4514610567578063d2e237291461056f578063d5d7ed7f1461058257610315565b8063bc2ed189116100c8578063bc2ed18914610539578063c34316c31461054c578063c76139d01461055f57610315565b8063b448165214610500578063b6aa083e14610513578063bb3a17c31461052657610315565b8063a0098d6911610150578063a63fc1631161012a578063a63fc163146104dd578063a94c7c34146104f0578063a9cc0536146104f857610315565b8063a0098d69146104af578063a154ce82146104b7578063a1fdc458146104ca57610315565b80638da5cb5b116101815780638da5cb5b1461048c57806392a42704146104945780639b44225b1461049c57610315565b806383a49c7c1461045e578063840c53bd1461046657806385f84ea31461047957610315565b8063392f5f641161026b57806366941984116102145780636cd5cd60116101ee5780636cd5cd601461043b578063715018a61461044e57806381ca66001461045657610315565b806366941984146104185780636a0e76c8146104205780636b60a09b1461043357610315565b806348fb27b81161024557806348fb27b8146103f55780635bc92d74146103fd5780635c275a391461041057610315565b8063392f5f64146103c5578063430ae469146103da57806346b88796146103ed57610315565b80631b669507116102cd5780632a0acc6a116102a75780632a0acc6a146103ad5780632fe94def146103b557806332fe7b26146103bd57610315565b80631b6695071461038a5780631bc5d81d1461039257806320e8d8191461039a57610315565b80631023d3e0116102fe5780631023d3e01461034d5780631135bb7b1461036257806317b7b61b1461037757610315565b8063065d570f1461031a5780630ba4628914610338575b600080fd5b6103226105c3565b60405161032f919061306b565b60405180910390f35b6103406105c8565b60405161032f9190612e5a565b610355610685565b60405161032f9190612e00565b610375610370366004612a9e565b6106f4565b005b610322610385366004612da0565b610825565b61032261085d565b610322610862565b6103756103a8366004612d83565b610867565b610322610959565b61032261095e565b610322610963565b6103cd610968565b60405161032f9190612db8565b6103cd6103e8366004612a66565b610984565b6103226109ac565b6103226109b1565b61037561040b366004612ad6565b6109b6565b610322610f9c565b610322610fa1565b61034061042e366004612a66565b610fa6565b6103cd61114e565b610375610449366004612d67565b61116a565b610375611259565b61032261133b565b610322611340565b610322610474366004612da0565b611345565b610340610487366004612a66565b611355565b6103cd611468565b610340611484565b6103756104aa366004612d83565b61153d565b610322611624565b6103756104c5366004612a66565b611629565b6103756104d8366004612a66565b611712565b6103756104eb366004612bcb565b611f9b565b610322612091565b610322612096565b6103cd61050e366004612d67565b61209b565b610375610521366004612d83565b6120c3565b610340610534366004612d67565b61216d565b610340610547366004612d67565b612182565b61034061055a366004612bf8565b612197565b6103226121b7565b6103226121bc565b61034061057d366004612a66565b6121c1565b6103226121d6565b6103cd610598366004612da0565b6121db565b6103756105ab366004612a66565b612212565b6103756105be366004612d83565b612360565b600381565b600080546105eb9073ffffffffffffffffffffffffffffffffffffffff16610fa6565b905060005b60045481101561068157600060048281548110610636577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561066b575061066b81610fa6565b925050808061067990613117565b9150506105f0565b5090565b606060048054806020026020016040519081016040528092919081815260200182805480156106ea57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106bf575b5050505050905090565b6106fc61240a565b73ffffffffffffffffffffffffffffffffffffffff1661071a611468565b73ffffffffffffffffffffffffffffffffffffffff16148061075e575061073f61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61079d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b60405180910390fd5b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063f2fde38b906107ef908490600401612db8565b600060405180830381600087803b15801561080957600080fd5b505af115801561081d573d6000803e3d6000fd5b505050505050565b600a818154811061083557600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600a81565b600881565b60005b60045481101561095457600481815481106108ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f20e8d81900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906320e8d8199061090f908690869060040161307a565b600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b50505050808061094c90613117565b91505061086a565b505050565b606b81565b606981565b606781565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600681565b606681565b6109be61240a565b73ffffffffffffffffffffffffffffffffffffffff166109dc611468565b73ffffffffffffffffffffffffffffffffffffffff161480610a205750610a0161240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b610a56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b6004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790555b8084511115610b31576000848281518110610b0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610b1e818761240e565b5080610b2981613117565b915050610ac6565b5060005b8083511115610ba0576000838281518110610b79577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610b8d818761254c565b5080610b9881613117565b915050610b35565b5060005b600a54811015610c89578473ffffffffffffffffffffffffffffffffffffffff16636cd5cd60600a8381548110610c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b8152600401610c44919061306b565b600060405180830381600087803b158015610c5e57600080fd5b505af1158015610c72573d6000803e3d6000fd5b505050508080610c8190613117565b915050610ba4565b5060005b600b54811015610e0c5760005b600454811015610df9578573ffffffffffffffffffffffffffffffffffffffff166320e8d819600b8481548110610cfa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff1660048481548110610d58577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610db4929173ffffffffffffffffffffffffffffffffffffffff169060040161307a565b600060405180830381600087803b158015610dce57600080fd5b505af1158015610de2573d6000803e3d6000fd5b505050508080610df190613117565b915050610c9a565b5080610e0481613117565b915050610c8d565b5060005b8082511115610f9557818181518110610e52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b866040518263ffffffff1660e01b8152600401610e929190612db8565b600060405180830381600087803b158015610eac57600080fd5b505af1158015610ec0573d6000803e3d6000fd5b505050508460076000848481518110610f02577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610f8d90613117565b915050610e10565b5050505050565b606581565b600181565b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fef57600080fd5b505afa158015611003573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110279190612a82565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611147575073ffffffffffffffffffffffffffffffffffffffff8084166000908152600760205260409020548282169116148015611147575073ffffffffffffffffffffffffffffffffffffffff8381166000908152600760209081526040918290205482517f8da5cb5b000000000000000000000000000000000000000000000000000000008152925130949190911692638da5cb5b926004808301939192829003018186803b1580156110f757600080fd5b505afa15801561110b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112f9190612a82565b73ffffffffffffffffffffffffffffffffffffffff16145b9392505050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60005b60045481101561125557600481815481106111b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f6cd5cd6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636cd5cd609061121090859060040161306b565b600060405180830381600087803b15801561122a57600080fd5b505af115801561123e573d6000803e3d6000fd5b50505050808061124d90613117565b91505061116d565b5050565b61126161240a565b73ffffffffffffffffffffffffffffffffffffffff1661127f611468565b73ffffffffffffffffffffffffffffffffffffffff16146112cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612fd9565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b606a81565b600981565b600b818154811061083557600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561139e57600080fd5b505afa1580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190612a82565b905073ffffffffffffffffffffffffffffffffffffffff811630148061142e57506113ff611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b80611147575073ffffffffffffffffffffffffffffffffffffffff9283166000908152600760205260409020548316921691909114919050565b60035473ffffffffffffffffffffffffffffffffffffffff1690565b600080546114a79073ffffffffffffffffffffffffffffffffffffffff16610fa6565b905060005b600454811015610681576000600482815481106114f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169050828015611527575061152781611355565b925050808061153590613117565b9150506114ac565b61154561240a565b73ffffffffffffffffffffffffffffffffffffffff16611563611468565b73ffffffffffffffffffffffffffffffffffffffff1614806115b757506008600061158c61240a565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806115e457506115c561240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61161a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f7c565b611255828261268b565b600281565b61163161240a565b73ffffffffffffffffffffffffffffffffffffffff1661164f611468565b73ffffffffffffffffffffffffffffffffffffffff1614806116a357506008600061167861240a565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806116d057506116b161240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f7c565b61170f816126e3565b50565b61171a61240a565b73ffffffffffffffffffffffffffffffffffffffff16611738611468565b73ffffffffffffffffffffffffffffffffffffffff16148061177c575061175d61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6117b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b60008173ffffffffffffffffffffffffffffffffffffffff166316a45ab76040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117fc57600080fd5b505af1158015611810573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526118569190810190612c25565b905060005b8082511115611a1257600082828151811061189f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80821660009081526007909352604090922054909250161561197a5773ffffffffffffffffffffffffffffffffffffffff808216600090815260076020526040908190205490517f1135bb7b000000000000000000000000000000000000000000000000000000008152911690631135bb7b906119439084908890600401612dd9565b600060405180830381600087803b15801561195d57600080fd5b505af1158015611971573d6000803e3d6000fd5b505050506119ff565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2fde38b906119cc908790600401612db8565b600060405180830381600087803b1580156119e657600080fd5b505af11580156119fa573d6000803e3d6000fd5b505050505b5080611a0a81613117565b91505061185b565b5060008273ffffffffffffffffffffffffffffffffffffffff1663cd28fc8f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a5d57600080fd5b505af1158015611a71573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611ab79190810190612cbe565b905060005b8082511115611b2157611b0f828281518110611b01577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518561254c565b80611b1981613117565b915050611abc565b50600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155604080517f61461954000000000000000000000000000000000000000000000000000000008152905163614619549160048082019260009290919082900301818387803b158015611bb557600080fd5b505af1158015611bc9573d6000803e3d6000fd5b5050600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555050604080517f4865cbc2000000000000000000000000000000000000000000000000000000008152905160009173ffffffffffffffffffffffffffffffffffffffff861691634865cbc29160048082019260209290919082900301818787803b158015611c6057600080fd5b505af1158015611c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c989190612a82565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611cf05750611cc1611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949061300e565b60005b8084511115611f32576000848281518110611d6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611dd457600080fd5b505afa158015611de8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0c9190612a82565b73ffffffffffffffffffffffffffffffffffffffff1614611e59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612e65565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600760205260409020541615611f1f5773ffffffffffffffffffffffffffffffffffffffff808216600081815260076020526040908190205490517ff2fde38b000000000000000000000000000000000000000000000000000000008152919263f2fde38b92611eec9290911690600401612db8565b600060405180830381600087803b158015611f0657600080fd5b505af1158015611f1a573d6000803e3d6000fd5b505050505b5080611f2a81613117565b915050611d29565b5060005b8083511115610f9557611f89838281518110611f7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518661268b565b80611f9381613117565b915050611f36565b611fa361240a565b73ffffffffffffffffffffffffffffffffffffffff16611fc1611468565b73ffffffffffffffffffffffffffffffffffffffff1614806120055750611fe661240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61203b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600581565b606881565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6120cb61240a565b73ffffffffffffffffffffffffffffffffffffffff166120e9611468565b73ffffffffffffffffffffffffffffffffffffffff16148061212d575061210e61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b611255828261254c565b60066020526000908152604090205460ff1681565b60056020526000908152604090205460ff1681565b600260209081526000928352604080842090915290825290205460ff1681565b606c81565b600481565b60086020526000908152604090205460ff1681565b600781565b600481815481106121eb57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b61221a61240a565b73ffffffffffffffffffffffffffffffffffffffff16612238611468565b73ffffffffffffffffffffffffffffffffffffffff1614612285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612fd9565b73ffffffffffffffffffffffffffffffffffffffff81166122d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612ec2565b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61236861240a565b73ffffffffffffffffffffffffffffffffffffffff16612386611468565b73ffffffffffffffffffffffffffffffffffffffff1614806123ca57506123ab61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612400576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b611255828261240e565b3390565b61ffff821660009081526005602052604090205460ff166124b95761ffff808316600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600a80549182018155909152601081047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546002600f909316929092026101000a9283029290930219161790555b6000546040517ffae371de00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063fae371de90612511908590859060040161307a565b600060405180830381600087803b15801561252b57600080fd5b505af115801561253f573d6000803e3d6000fd5b505050506112558261116a565b61ffff821660009081526006602052604090205460ff166125f75761ffff808316600081815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600b80549182018155909152601081047f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546002600f909316929092026101000a9283029290930219161790555b6000546040517fb6aa083e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b6aa083e9061264f908590859060040161307a565b600060405180830381600087803b15801561266957600080fd5b505af115801561267d573d6000803e3d6000fd5b505050506112558282610867565b6000546040517f9b44225b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b44225b9061264f908590859060040161307a565b60005b600b5481101561285e57600054600b805473ffffffffffffffffffffffffffffffffffffffff9092169163d87fefd291908490811061274e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16846040518363ffffffff1660e01b815260040161279092919061307a565b60206040518083038186803b1580156127a857600080fd5b505afa1580156127bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e09190612d4b565b1561284c5761284c600b8281548110612822577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff168361268b565b8061285681613117565b9150506126e6565b5060005b600a5481101561125557600054600a805473ffffffffffffffffffffffffffffffffffffffff808616931691633c9c8f9c91859081106128cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b815260040161290b919061306b565b60206040518083038186803b15801561292357600080fd5b505afa158015612937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061295b9190612a82565b73ffffffffffffffffffffffffffffffffffffffff1614156129df576129df600a82815481106129b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16600061240e565b806129e981613117565b915050612862565b600082601f830112612a01578081fd5b81356020612a16612a11836130f3565b6130a4565b8281528181019085830183850287018401881015612a32578586fd5b855b85811015612a59578135612a47816131d4565b84529284019290840190600101612a34565b5090979650505050505050565b600060208284031215612a77578081fd5b8135611147816131a4565b600060208284031215612a93578081fd5b8151611147816131a4565b60008060408385031215612ab0578081fd5b8235612abb816131a4565b91506020830135612acb816131a4565b809150509250929050565b60008060008060808587031215612aeb578182fd5b8435612af6816131a4565b935060208581013567ffffffffffffffff80821115612b13578485fd5b612b1f89838a016129f1565b95506040880135915080821115612b34578485fd5b612b4089838a016129f1565b94506060880135915080821115612b55578384fd5b508601601f81018813612b66578283fd5b8035612b74612a11826130f3565b81815283810190838501858402850186018c1015612b90578687fd5b8694505b83851015612bbb578035612ba7816131a4565b835260019490940193918501918501612b94565b50979a9699509497505050505050565b60008060408385031215612bdd578182fd5b8235612be8816131a4565b91506020830135612acb816131c6565b60008060408385031215612c0a578182fd5b8235612c15816131a4565b91506020830135612acb816131d4565b60006020808385031215612c37578182fd5b825167ffffffffffffffff811115612c4d578283fd5b8301601f81018513612c5d578283fd5b8051612c6b612a11826130f3565b8181528381019083850185840285018601891015612c87578687fd5b8694505b83851015612cb2578051612c9e816131a4565b835260019490940193918501918501612c8b565b50979650505050505050565b60006020808385031215612cd0578182fd5b825167ffffffffffffffff811115612ce6578283fd5b8301601f81018513612cf6578283fd5b8051612d04612a11826130f3565b8181528381019083850185840285018601891015612d20578687fd5b8694505b83851015612cb2578051612d37816131d4565b835260019490940193918501918501612d24565b600060208284031215612d5c578081fd5b8151611147816131c6565b600060208284031215612d78578081fd5b8135611147816131d4565b60008060408385031215612d95578182fd5b8235612abb816131d4565b600060208284031215612db1578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015612e4e57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612e1c565b50909695505050505050565b901515815260200190565b60208082526021908201527f4578656375746f7220646964206e6f742072657475726e206f776e657273686960408201527f7000000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220657865637560408201527f746f720000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220617574686f60408201527f72697a65642064697361626c6572206f72206578656375746f72000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f4578656375746f7220646f65736e27742068617665207468652072696768742060408201527f726967687466756c206f776e6572000000000000000000000000000000000000606082015260800190565b61ffff91909116815260200190565b61ffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156130eb576130eb613175565b604052919050565b600067ffffffffffffffff82111561310d5761310d613175565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561316e577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461170f57600080fd5b801515811461170f57600080fd5b61ffff8116811461170f57600080fdfea26469706673582212201b1f354281f13b8bc4cb23e0403cc48e2171706b6ce5f500385d1e8f59249a5564736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103155760003560e01c806383a49c7c116101a7578063b4481652116100ee578063cacf8d4511610097578063f1ce598e11610071578063f1ce598e1461058a578063f2fde38b1461059d578063fae371de146105b057610315565b8063cacf8d4514610567578063d2e237291461056f578063d5d7ed7f1461058257610315565b8063bc2ed189116100c8578063bc2ed18914610539578063c34316c31461054c578063c76139d01461055f57610315565b8063b448165214610500578063b6aa083e14610513578063bb3a17c31461052657610315565b8063a0098d6911610150578063a63fc1631161012a578063a63fc163146104dd578063a94c7c34146104f0578063a9cc0536146104f857610315565b8063a0098d69146104af578063a154ce82146104b7578063a1fdc458146104ca57610315565b80638da5cb5b116101815780638da5cb5b1461048c57806392a42704146104945780639b44225b1461049c57610315565b806383a49c7c1461045e578063840c53bd1461046657806385f84ea31461047957610315565b8063392f5f641161026b57806366941984116102145780636cd5cd60116101ee5780636cd5cd601461043b578063715018a61461044e57806381ca66001461045657610315565b806366941984146104185780636a0e76c8146104205780636b60a09b1461043357610315565b806348fb27b81161024557806348fb27b8146103f55780635bc92d74146103fd5780635c275a391461041057610315565b8063392f5f64146103c5578063430ae469146103da57806346b88796146103ed57610315565b80631b669507116102cd5780632a0acc6a116102a75780632a0acc6a146103ad5780632fe94def146103b557806332fe7b26146103bd57610315565b80631b6695071461038a5780631bc5d81d1461039257806320e8d8191461039a57610315565b80631023d3e0116102fe5780631023d3e01461034d5780631135bb7b1461036257806317b7b61b1461037757610315565b8063065d570f1461031a5780630ba4628914610338575b600080fd5b6103226105c3565b60405161032f919061306b565b60405180910390f35b6103406105c8565b60405161032f9190612e5a565b610355610685565b60405161032f9190612e00565b610375610370366004612a9e565b6106f4565b005b610322610385366004612da0565b610825565b61032261085d565b610322610862565b6103756103a8366004612d83565b610867565b610322610959565b61032261095e565b610322610963565b6103cd610968565b60405161032f9190612db8565b6103cd6103e8366004612a66565b610984565b6103226109ac565b6103226109b1565b61037561040b366004612ad6565b6109b6565b610322610f9c565b610322610fa1565b61034061042e366004612a66565b610fa6565b6103cd61114e565b610375610449366004612d67565b61116a565b610375611259565b61032261133b565b610322611340565b610322610474366004612da0565b611345565b610340610487366004612a66565b611355565b6103cd611468565b610340611484565b6103756104aa366004612d83565b61153d565b610322611624565b6103756104c5366004612a66565b611629565b6103756104d8366004612a66565b611712565b6103756104eb366004612bcb565b611f9b565b610322612091565b610322612096565b6103cd61050e366004612d67565b61209b565b610375610521366004612d83565b6120c3565b610340610534366004612d67565b61216d565b610340610547366004612d67565b612182565b61034061055a366004612bf8565b612197565b6103226121b7565b6103226121bc565b61034061057d366004612a66565b6121c1565b6103226121d6565b6103cd610598366004612da0565b6121db565b6103756105ab366004612a66565b612212565b6103756105be366004612d83565b612360565b600381565b600080546105eb9073ffffffffffffffffffffffffffffffffffffffff16610fa6565b905060005b60045481101561068157600060048281548110610636577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905082801561066b575061066b81610fa6565b925050808061067990613117565b9150506105f0565b5090565b606060048054806020026020016040519081016040528092919081815260200182805480156106ea57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116106bf575b5050505050905090565b6106fc61240a565b73ffffffffffffffffffffffffffffffffffffffff1661071a611468565b73ffffffffffffffffffffffffffffffffffffffff16148061075e575061073f61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61079d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b60405180910390fd5b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063f2fde38b906107ef908490600401612db8565b600060405180830381600087803b15801561080957600080fd5b505af115801561081d573d6000803e3d6000fd5b505050505050565b600a818154811061083557600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b600a81565b600881565b60005b60045481101561095457600481815481106108ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f20e8d81900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906320e8d8199061090f908690869060040161307a565b600060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b50505050808061094c90613117565b91505061086a565b505050565b606b81565b606981565b606781565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60076020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600681565b606681565b6109be61240a565b73ffffffffffffffffffffffffffffffffffffffff166109dc611468565b73ffffffffffffffffffffffffffffffffffffffff161480610a205750610a0161240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b610a56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b6004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790555b8084511115610b31576000848281518110610b0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610b1e818761240e565b5080610b2981613117565b915050610ac6565b5060005b8083511115610ba0576000838281518110610b79577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050610b8d818761254c565b5080610b9881613117565b915050610b35565b5060005b600a54811015610c89578473ffffffffffffffffffffffffffffffffffffffff16636cd5cd60600a8381548110610c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b8152600401610c44919061306b565b600060405180830381600087803b158015610c5e57600080fd5b505af1158015610c72573d6000803e3d6000fd5b505050508080610c8190613117565b915050610ba4565b5060005b600b54811015610e0c5760005b600454811015610df9578573ffffffffffffffffffffffffffffffffffffffff166320e8d819600b8481548110610cfa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff1660048481548110610d58577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610db4929173ffffffffffffffffffffffffffffffffffffffff169060040161307a565b600060405180830381600087803b158015610dce57600080fd5b505af1158015610de2573d6000803e3d6000fd5b505050508080610df190613117565b915050610c9a565b5080610e0481613117565b915050610c8d565b5060005b8082511115610f9557818181518110610e52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b866040518263ffffffff1660e01b8152600401610e929190612db8565b600060405180830381600087803b158015610eac57600080fd5b505af1158015610ec0573d6000803e3d6000fd5b505050508460076000848481518110610f02577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610f8d90613117565b915050610e10565b5050505050565b606581565b600181565b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fef57600080fd5b505afa158015611003573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110279190612a82565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611147575073ffffffffffffffffffffffffffffffffffffffff8084166000908152600760205260409020548282169116148015611147575073ffffffffffffffffffffffffffffffffffffffff8381166000908152600760209081526040918290205482517f8da5cb5b000000000000000000000000000000000000000000000000000000008152925130949190911692638da5cb5b926004808301939192829003018186803b1580156110f757600080fd5b505afa15801561110b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112f9190612a82565b73ffffffffffffffffffffffffffffffffffffffff16145b9392505050565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60005b60045481101561125557600481815481106111b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546040517f6cd5cd6000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636cd5cd609061121090859060040161306b565b600060405180830381600087803b15801561122a57600080fd5b505af115801561123e573d6000803e3d6000fd5b50505050808061124d90613117565b91505061116d565b5050565b61126161240a565b73ffffffffffffffffffffffffffffffffffffffff1661127f611468565b73ffffffffffffffffffffffffffffffffffffffff16146112cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612fd9565b60035460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b606a81565b600981565b600b818154811061083557600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561139e57600080fd5b505afa1580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190612a82565b905073ffffffffffffffffffffffffffffffffffffffff811630148061142e57506113ff611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b80611147575073ffffffffffffffffffffffffffffffffffffffff9283166000908152600760205260409020548316921691909114919050565b60035473ffffffffffffffffffffffffffffffffffffffff1690565b600080546114a79073ffffffffffffffffffffffffffffffffffffffff16610fa6565b905060005b600454811015610681576000600482815481106114f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169050828015611527575061152781611355565b925050808061153590613117565b9150506114ac565b61154561240a565b73ffffffffffffffffffffffffffffffffffffffff16611563611468565b73ffffffffffffffffffffffffffffffffffffffff1614806115b757506008600061158c61240a565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806115e457506115c561240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61161a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f7c565b611255828261268b565b600281565b61163161240a565b73ffffffffffffffffffffffffffffffffffffffff1661164f611468565b73ffffffffffffffffffffffffffffffffffffffff1614806116a357506008600061167861240a565b73ffffffffffffffffffffffffffffffffffffffff16815260208101919091526040016000205460ff165b806116d057506116b161240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b611706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f7c565b61170f816126e3565b50565b61171a61240a565b73ffffffffffffffffffffffffffffffffffffffff16611738611468565b73ffffffffffffffffffffffffffffffffffffffff16148061177c575061175d61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b6117b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b60008173ffffffffffffffffffffffffffffffffffffffff166316a45ab76040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117fc57600080fd5b505af1158015611810573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526118569190810190612c25565b905060005b8082511115611a1257600082828151811061189f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff80821660009081526007909352604090922054909250161561197a5773ffffffffffffffffffffffffffffffffffffffff808216600090815260076020526040908190205490517f1135bb7b000000000000000000000000000000000000000000000000000000008152911690631135bb7b906119439084908890600401612dd9565b600060405180830381600087803b15801561195d57600080fd5b505af1158015611971573d6000803e3d6000fd5b505050506119ff565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2fde38b906119cc908790600401612db8565b600060405180830381600087803b1580156119e657600080fd5b505af11580156119fa573d6000803e3d6000fd5b505050505b5080611a0a81613117565b91505061185b565b5060008273ffffffffffffffffffffffffffffffffffffffff1663cd28fc8f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a5d57600080fd5b505af1158015611a71573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611ab79190810190612cbe565b905060005b8082511115611b2157611b0f828281518110611b01577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518561254c565b80611b1981613117565b915050611abc565b50600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155604080517f61461954000000000000000000000000000000000000000000000000000000008152905163614619549160048082019260009290919082900301818387803b158015611bb557600080fd5b505af1158015611bc9573d6000803e3d6000fd5b5050600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555050604080517f4865cbc2000000000000000000000000000000000000000000000000000000008152905160009173ffffffffffffffffffffffffffffffffffffffff861691634865cbc29160048082019260209290919082900301818787803b158015611c6057600080fd5b505af1158015611c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c989190612a82565b905073ffffffffffffffffffffffffffffffffffffffff8116301480611cf05750611cc1611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949061300e565b60005b8084511115611f32576000848281518110611d6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611dd457600080fd5b505afa158015611de8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0c9190612a82565b73ffffffffffffffffffffffffffffffffffffffff1614611e59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612e65565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600760205260409020541615611f1f5773ffffffffffffffffffffffffffffffffffffffff808216600081815260076020526040908190205490517ff2fde38b000000000000000000000000000000000000000000000000000000008152919263f2fde38b92611eec9290911690600401612db8565b600060405180830381600087803b158015611f0657600080fd5b505af1158015611f1a573d6000803e3d6000fd5b505050505b5080611f2a81613117565b915050611d29565b5060005b8083511115610f9557611f89838281518110611f7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518661268b565b80611f9381613117565b915050611f36565b611fa361240a565b73ffffffffffffffffffffffffffffffffffffffff16611fc1611468565b73ffffffffffffffffffffffffffffffffffffffff1614806120055750611fe661240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b61203b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b600581565b606881565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6120cb61240a565b73ffffffffffffffffffffffffffffffffffffffff166120e9611468565b73ffffffffffffffffffffffffffffffffffffffff16148061212d575061210e61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b611255828261254c565b60066020526000908152604090205460ff1681565b60056020526000908152604090205460ff1681565b600260209081526000928352604080842090915290825290205460ff1681565b606c81565b600481565b60086020526000908152604090205460ff1681565b600781565b600481815481106121eb57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b61221a61240a565b73ffffffffffffffffffffffffffffffffffffffff16612238611468565b73ffffffffffffffffffffffffffffffffffffffff1614612285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612fd9565b73ffffffffffffffffffffffffffffffffffffffff81166122d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612ec2565b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61236861240a565b73ffffffffffffffffffffffffffffffffffffffff16612386611468565b73ffffffffffffffffffffffffffffffffffffffff1614806123ca57506123ab61240a565b60095473ffffffffffffffffffffffffffffffffffffffff9081169116145b612400576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490612f1f565b611255828261240e565b3390565b61ffff821660009081526005602052604090205460ff166124b95761ffff808316600081815260056020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600a80549182018155909152601081047fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546002600f909316929092026101000a9283029290930219161790555b6000546040517ffae371de00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063fae371de90612511908590859060040161307a565b600060405180830381600087803b15801561252b57600080fd5b505af115801561253f573d6000803e3d6000fd5b505050506112558261116a565b61ffff821660009081526006602052604090205460ff166125f75761ffff808316600081815260066020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155600b80549182018155909152601081047f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546002600f909316929092026101000a9283029290930219161790555b6000546040517fb6aa083e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b6aa083e9061264f908590859060040161307a565b600060405180830381600087803b15801561266957600080fd5b505af115801561267d573d6000803e3d6000fd5b505050506112558282610867565b6000546040517f9b44225b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b44225b9061264f908590859060040161307a565b60005b600b5481101561285e57600054600b805473ffffffffffffffffffffffffffffffffffffffff9092169163d87fefd291908490811061274e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16846040518363ffffffff1660e01b815260040161279092919061307a565b60206040518083038186803b1580156127a857600080fd5b505afa1580156127bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e09190612d4b565b1561284c5761284c600b8281548110612822577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff168361268b565b8061285681613117565b9150506126e6565b5060005b600a5481101561125557600054600a805473ffffffffffffffffffffffffffffffffffffffff808616931691633c9c8f9c91859081106128cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff166040518263ffffffff1660e01b815260040161290b919061306b565b60206040518083038186803b15801561292357600080fd5b505afa158015612937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061295b9190612a82565b73ffffffffffffffffffffffffffffffffffffffff1614156129df576129df600a82815481106129b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090601091828204019190066002029054906101000a900461ffff16600061240e565b806129e981613117565b915050612862565b600082601f830112612a01578081fd5b81356020612a16612a11836130f3565b6130a4565b8281528181019085830183850287018401881015612a32578586fd5b855b85811015612a59578135612a47816131d4565b84529284019290840190600101612a34565b5090979650505050505050565b600060208284031215612a77578081fd5b8135611147816131a4565b600060208284031215612a93578081fd5b8151611147816131a4565b60008060408385031215612ab0578081fd5b8235612abb816131a4565b91506020830135612acb816131a4565b809150509250929050565b60008060008060808587031215612aeb578182fd5b8435612af6816131a4565b935060208581013567ffffffffffffffff80821115612b13578485fd5b612b1f89838a016129f1565b95506040880135915080821115612b34578485fd5b612b4089838a016129f1565b94506060880135915080821115612b55578384fd5b508601601f81018813612b66578283fd5b8035612b74612a11826130f3565b81815283810190838501858402850186018c1015612b90578687fd5b8694505b83851015612bbb578035612ba7816131a4565b835260019490940193918501918501612b94565b50979a9699509497505050505050565b60008060408385031215612bdd578182fd5b8235612be8816131a4565b91506020830135612acb816131c6565b60008060408385031215612c0a578182fd5b8235612c15816131a4565b91506020830135612acb816131d4565b60006020808385031215612c37578182fd5b825167ffffffffffffffff811115612c4d578283fd5b8301601f81018513612c5d578283fd5b8051612c6b612a11826130f3565b8181528381019083850185840285018601891015612c87578687fd5b8694505b83851015612cb2578051612c9e816131a4565b835260019490940193918501918501612c8b565b50979650505050505050565b60006020808385031215612cd0578182fd5b825167ffffffffffffffff811115612ce6578283fd5b8301601f81018513612cf6578283fd5b8051612d04612a11826130f3565b8181528381019083850185840285018601891015612d20578687fd5b8694505b83851015612cb2578051612d37816131d4565b835260019490940193918501918501612d24565b600060208284031215612d5c578081fd5b8151611147816131c6565b600060208284031215612d78578081fd5b8135611147816131d4565b60008060408385031215612d95578182fd5b8235612abb816131d4565b600060208284031215612db1578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015612e4e57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612e1c565b50909695505050505050565b901515815260200190565b60208082526021908201527f4578656375746f7220646964206e6f742072657475726e206f776e657273686960408201527f7000000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220657865637560408201527f746f720000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f43616c6c6572206973206e6f7420746865206f776e6572206f7220617574686f60408201527f72697a65642064697361626c6572206f72206578656375746f72000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f4578656375746f7220646f65736e27742068617665207468652072696768742060408201527f726967687466756c206f776e6572000000000000000000000000000000000000606082015260800190565b61ffff91909116815260200190565b61ffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156130eb576130eb613175565b604052919050565b600067ffffffffffffffff82111561310d5761310d613175565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561316e577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461170f57600080fd5b801515811461170f57600080fd5b61ffff8116811461170f57600080fdfea26469706673582212201b1f354281f13b8bc4cb23e0403cc48e2171706b6ce5f500385d1e8f59249a5564736f6c63430008010033",
  "devdoc": {
    "details": "Provides a single point of reference to verify ownership integrity within our system as well as performing cache invalidation for roles and inter-contract relationships",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11727,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "roles",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Roles)12117"
      },
      {
        "astId": 11731,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "mainCharacterCache",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_address)"
      },
      {
        "astId": 11737,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "roleCache",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint16,t_bool))"
      },
      {
        "astId": 381,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6939,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "managedContracts",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6943,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "knownCharacters",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint16,t_bool)"
      },
      {
        "astId": 6947,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "knownRoles",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint16,t_bool)"
      },
      {
        "astId": 6951,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "delegateOwner",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6955,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "disabler",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6961,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "currentExecutor",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 6964,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "allCharacters",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint16)dyn_storage"
      },
      {
        "astId": 6967,
        "contract": "contracts/DependencyController.sol:DependencyController",
        "label": "allRoles",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_uint16)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint16)dyn_storage": {
        "base": "t_uint16",
        "encoding": "dynamic_array",
        "label": "uint16[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Roles)12117": {
        "encoding": "inplace",
        "label": "contract Roles",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint16,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint16 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint16,t_bool)"
      },
      "t_mapping(t_uint16,t_address)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint16,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      }
    }
  }
}